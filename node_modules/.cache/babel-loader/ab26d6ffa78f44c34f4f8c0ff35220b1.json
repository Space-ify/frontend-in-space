{"ast":null,"code":"var _jsxFileName = \"/Users/mitchellkimbell/Desktop/space-frontend/src/App.js\";\nimport React from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport planetData from \"./planetData\";\nimport \"./styles.css\";\nimport Frame from \"./components/Frame/Frame\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Frame, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nfunction Sun() {\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n      args: [2.5, 32, 32]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"#E1DC59\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Sun;\nfunction Planet(_ref) {\n  let {\n    planet: {\n      color,\n      xRadius,\n      zRadius,\n      size\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [xRadius, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [size, 32, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Ecliptic, {\n      xRadius: xRadius,\n      zRadius: zRadius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c3 = Planet;\nfunction Lights() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [0, 0, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c4 = Lights;\nfunction Ecliptic(_ref2) {\n  let {\n    xRadius = 1,\n    zRadius = 1\n  } = _ref2;\n  const points = [];\n  for (let index = 0; index < 64; index++) {\n    const angle = index / 64 * 2 * Math.PI;\n    const x = xRadius * Math.cos(angle);\n    const z = zRadius * Math.sin(angle);\n    points.push(new THREE.Vector3(x, 0, z));\n  }\n  points.push(points[0]);\n  const lineGeometry = new THREE.BufferGeometry().setFromPoints(points);\n  return /*#__PURE__*/_jsxDEV(\"line\", {\n    geometry: lineGeometry,\n    children: /*#__PURE__*/_jsxDEV(\"lineBasicMaterial\", {\n      attach: \"material\",\n      color: \"#BFBBDA\",\n      linewidth: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_c5 = Ecliptic;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Sun\");\n$RefreshReg$(_c3, \"Planet\");\n$RefreshReg$(_c4, \"Lights\");\n$RefreshReg$(_c5, \"Ecliptic\");","map":{"version":3,"names":["React","Canvas","OrbitControls","THREE","planetData","Frame","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Sun","args","color","_c2","Planet","_ref","planet","xRadius","zRadius","size","position","Ecliptic","_c3","Lights","_c4","_ref2","points","index","angle","Math","PI","x","cos","z","sin","push","Vector3","lineGeometry","BufferGeometry","setFromPoints","geometry","attach","linewidth","_c5","$RefreshReg$"],"sources":["/Users/mitchellkimbell/Desktop/space-frontend/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport planetData from \"./planetData\";\nimport \"./styles.css\";\nimport Frame from \"./components/Frame/Frame\";\n\nexport default function App() {\n  return (\n    <>\n      <Frame> \n        \n      </Frame>\n    </>\n  );\n}\nfunction Sun() {\n  return (\n    <mesh>\n      <sphereGeometry args={[2.5, 32, 32]} />\n      <meshStandardMaterial color=\"#E1DC59\" />\n    </mesh>\n  );\n}\nfunction Planet({ planet: { color, xRadius, zRadius, size } }) {\n  return (\n    <>\n      <mesh position={[xRadius, 0, 0]}>\n        <sphereGeometry args={[size, 32, 32]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <Ecliptic xRadius={xRadius} zRadius={zRadius} />\n    </>\n  );\n}\n\nfunction Lights() {\n  return (\n    <>\n      <ambientLight />\n      <pointLight position={[0, 0, 0]} />\n    </>\n  );\n}\n\nfunction Ecliptic({ xRadius = 1, zRadius = 1 }) {\n  const points = [];\n  for (let index = 0; index < 64; index++) {\n    const angle = (index / 64) * 2 * Math.PI;\n    const x = xRadius * Math.cos(angle);\n    const z = zRadius * Math.sin(angle);\n    points.push(new THREE.Vector3(x, 0, z));\n  }\n\n  points.push(points[0]);\n\n  const lineGeometry = new THREE.BufferGeometry().setFromPoints(points);\n  return (\n    <line geometry={lineGeometry}>\n      <lineBasicMaterial attach=\"material\" color=\"#BFBBDA\" linewidth={10} />\n    </line>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}