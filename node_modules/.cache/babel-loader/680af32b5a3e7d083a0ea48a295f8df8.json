{"ast":null,"code":"import { useContext, useRef, useState, createElement, createContext } from 'react';\nimport { Object3D, Matrix4, Quaternion, Vector3, Scene } from 'three';\nimport { useThree, useFrame, createPortal } from '@react-three/fiber';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { useCamera } from './useCamera.js';\nconst Context = /*#__PURE__*/createContext({});\nconst useGizmoContext = () => {\n  return useContext(Context);\n};\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\n\nconst dummy = new Object3D();\nconst matrix = new Matrix4();\nconst [q1, q2] = [new Quaternion(), new Quaternion()];\nconst target = new Vector3();\nconst targetPosition = new Vector3();\nconst targetQuaternion = new Quaternion();\nconst GizmoHelper = _ref => {\n  let {\n    alignment = 'bottom-right',\n    margin = [80, 80],\n    onUpdate,\n    onTarget,\n    children: GizmoHelperComponent\n  } = _ref;\n  const size = useThree(_ref2 => {\n    let {\n      size\n    } = _ref2;\n    return size;\n  });\n  const mainCamera = useThree(_ref3 => {\n    let {\n      camera\n    } = _ref3;\n    return camera;\n  });\n  const gl = useThree(_ref4 => {\n    let {\n      gl\n    } = _ref4;\n    return gl;\n  });\n  const gizmoRef = useRef();\n  const virtualCam = useRef(null);\n  const [virtualScene] = useState(() => new Scene());\n  const animating = useRef(false);\n  const radius = useRef(0);\n  const focusPoint = useRef(new Vector3(0, 0, 0));\n  const tweenCamera = direction => {\n    animating.current = true;\n    focusPoint.current = onTarget();\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\n\n    dummy.position.copy(target);\n    dummy.lookAt(mainCamera.position);\n    q1.copy(dummy.quaternion); // To new current camera orientation\n\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    q2.copy(dummy.quaternion);\n  };\n  const animateStep = delta => {\n    if (!animating.current) return;\n    const step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\n\n    q1.rotateTowards(q2, step);\n    mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current); // animate orientation\n\n    mainCamera.quaternion.rotateTowards(targetQuaternion, step);\n    mainCamera.updateProjectionMatrix();\n    onUpdate && onUpdate();\n    if (q1.angleTo(q2) < 0.01) {\n      animating.current = false;\n    }\n  };\n  const beforeRender = () => {\n    var _gizmoRef$current;\n\n    // Sync gizmo with main camera orientation\n    matrix.copy(mainCamera.matrix).invert();\n    (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix);\n  };\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      animateStep(delta);\n      beforeRender();\n      gl.autoClear = false;\n      gl.clearDepth();\n      gl.render(virtualScene, virtualCam.current);\n    }\n  });\n  const gizmoHelperContext = {\n    tweenCamera,\n    raycast: useCamera(virtualCam)\n  }; // Position gizmo component within scene\n\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return createPortal( /*#__PURE__*/createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/createElement(OrthographicCamera, {\n    ref: virtualCam,\n    makeDefault: false,\n    position: [0, 0, 100]\n  }), /*#__PURE__*/createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, GizmoHelperComponent)), virtualScene);\n};\nexport { GizmoHelper, useGizmoContext };","map":{"version":3,"names":["useContext","useRef","useState","createElement","createContext","Object3D","Matrix4","Quaternion","Vector3","Scene","useThree","useFrame","createPortal","OrthographicCamera","useCamera","Context","useGizmoContext","turnRate","Math","PI","dummy","matrix","q1","q2","target","targetPosition","targetQuaternion","GizmoHelper","_ref","alignment","margin","onUpdate","onTarget","children","GizmoHelperComponent","size","_ref2","mainCamera","_ref3","camera","gl","_ref4","gizmoRef","virtualCam","virtualScene","animating","radius","focusPoint","tweenCamera","direction","current","position","distanceTo","copy","lookAt","quaternion","multiplyScalar","add","animateStep","delta","step","rotateTowards","set","applyQuaternion","updateProjectionMatrix","angleTo","beforeRender","_gizmoRef$current","invert","setFromRotationMatrix","_","autoClear","clearDepth","render","gizmoHelperContext","raycast","marginX","marginY","x","endsWith","width","y","startsWith","height","Provider","value","ref","makeDefault"],"sources":["/Users/mitchellkimbell/Desktop/frontend-in-space/node_modules/@react-three/drei/core/GizmoHelper.js"],"sourcesContent":["import { useContext, useRef, useState, createElement, createContext } from 'react';\nimport { Object3D, Matrix4, Quaternion, Vector3, Scene } from 'three';\nimport { useThree, useFrame, createPortal } from '@react-three/fiber';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { useCamera } from './useCamera.js';\n\nconst Context = /*#__PURE__*/createContext({});\nconst useGizmoContext = () => {\n  return useContext(Context);\n};\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\n\nconst dummy = new Object3D();\nconst matrix = new Matrix4();\nconst [q1, q2] = [new Quaternion(), new Quaternion()];\nconst target = new Vector3();\nconst targetPosition = new Vector3();\nconst targetQuaternion = new Quaternion();\nconst GizmoHelper = ({\n  alignment = 'bottom-right',\n  margin = [80, 80],\n  onUpdate,\n  onTarget,\n  children: GizmoHelperComponent\n}) => {\n  const size = useThree(({\n    size\n  }) => size);\n  const mainCamera = useThree(({\n    camera\n  }) => camera);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const gizmoRef = useRef();\n  const virtualCam = useRef(null);\n  const [virtualScene] = useState(() => new Scene());\n  const animating = useRef(false);\n  const radius = useRef(0);\n  const focusPoint = useRef(new Vector3(0, 0, 0));\n\n  const tweenCamera = direction => {\n    animating.current = true;\n    focusPoint.current = onTarget();\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\n\n    dummy.position.copy(target);\n    dummy.lookAt(mainCamera.position);\n    q1.copy(dummy.quaternion); // To new current camera orientation\n\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    q2.copy(dummy.quaternion);\n  };\n\n  const animateStep = delta => {\n    if (!animating.current) return;\n    const step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\n\n    q1.rotateTowards(q2, step);\n    mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current); // animate orientation\n\n    mainCamera.quaternion.rotateTowards(targetQuaternion, step);\n    mainCamera.updateProjectionMatrix();\n    onUpdate && onUpdate();\n\n    if (q1.angleTo(q2) < 0.01) {\n      animating.current = false;\n    }\n  };\n\n  const beforeRender = () => {\n    var _gizmoRef$current;\n\n    // Sync gizmo with main camera orientation\n    matrix.copy(mainCamera.matrix).invert();\n    (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix);\n  };\n\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      animateStep(delta);\n      beforeRender();\n      gl.autoClear = false;\n      gl.clearDepth();\n      gl.render(virtualScene, virtualCam.current);\n    }\n  });\n  const gizmoHelperContext = {\n    tweenCamera,\n    raycast: useCamera(virtualCam)\n  }; // Position gizmo component within scene\n\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return createPortal( /*#__PURE__*/createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/createElement(OrthographicCamera, {\n    ref: virtualCam,\n    makeDefault: false,\n    position: [0, 0, 100]\n  }), /*#__PURE__*/createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, GizmoHelperComponent)), virtualScene);\n};\n\nexport { GizmoHelper, useGizmoContext };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}