{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport { ShaderMaterial, UniformsUtils } from 'three';\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  return class extends ShaderMaterial {\n    constructor() {\n      const entries = Object.entries(uniforms); // Create unforms and shaders\n\n      super({\n        uniforms: entries.reduce((acc, _ref) => {\n          let [name, value] = _ref;\n          const uniform = UniformsUtils.clone({\n            [name]: {\n              value\n            }\n          });\n          return _extends({}, acc, uniform);\n        }, {}),\n        vertexShader,\n        fragmentShader\n      }); // Create getter/setters\n\n      entries.forEach(_ref2 => {\n        let [name] = _ref2;\n        return Object.defineProperty(this, name, {\n          get: () => this.uniforms[name].value,\n          set: v => this.uniforms[name].value = v\n        });\n      });\n      if (onInit) onInit(this);\n    }\n  };\n}\nexport { shaderMaterial };","map":{"version":3,"names":["_extends","ShaderMaterial","UniformsUtils","shaderMaterial","uniforms","vertexShader","fragmentShader","onInit","constructor","entries","Object","reduce","acc","_ref","name","value","uniform","clone","forEach","_ref2","defineProperty","get","set","v"],"sources":["/Users/mitchellkimbell/Desktop/frontend-in-space/node_modules/@react-three/drei/core/shaderMaterial.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport { ShaderMaterial, UniformsUtils } from 'three';\n\nfunction shaderMaterial(uniforms, vertexShader, fragmentShader, onInit) {\n  return class extends ShaderMaterial {\n    constructor() {\n      const entries = Object.entries(uniforms); // Create unforms and shaders\n\n      super({\n        uniforms: entries.reduce((acc, [name, value]) => {\n          const uniform = UniformsUtils.clone({\n            [name]: {\n              value\n            }\n          });\n          return _extends({}, acc, uniform);\n        }, {}),\n        vertexShader,\n        fragmentShader\n      }); // Create getter/setters\n\n      entries.forEach(([name]) => Object.defineProperty(this, name, {\n        get: () => this.uniforms[name].value,\n        set: v => this.uniforms[name].value = v\n      }));\n      if (onInit) onInit(this);\n    }\n\n  };\n}\n\nexport { shaderMaterial };\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,cAAc,EAAEC,aAAa,QAAQ,OAAO;AAErD,SAASC,cAAcA,CAACC,QAAQ,EAAEC,YAAY,EAAEC,cAAc,EAAEC,MAAM,EAAE;EACtE,OAAO,cAAcN,cAAc,CAAC;IAClCO,WAAWA,CAAA,EAAG;MACZ,MAAMC,OAAO,GAAGC,MAAM,CAACD,OAAO,CAACL,QAAQ,CAAC,CAAC,CAAC;;MAE1C,KAAK,CAAC;QACJA,QAAQ,EAAEK,OAAO,CAACE,MAAM,CAAC,CAACC,GAAG,EAAAC,IAAA,KAAoB;UAAA,IAAlB,CAACC,IAAI,EAAEC,KAAK,CAAC,GAAAF,IAAA;UAC1C,MAAMG,OAAO,GAAGd,aAAa,CAACe,KAAK,CAAC;YAClC,CAACH,IAAI,GAAG;cACNC;YACF;UACF,CAAC,CAAC;UACF,OAAOf,QAAQ,CAAC,CAAC,CAAC,EAAEY,GAAG,EAAEI,OAAO,CAAC;QACnC,CAAC,EAAE,CAAC,CAAC,CAAC;QACNX,YAAY;QACZC;MACF,CAAC,CAAC,CAAC,CAAC;;MAEJG,OAAO,CAACS,OAAO,CAACC,KAAA;QAAA,IAAC,CAACL,IAAI,CAAC,GAAAK,KAAA;QAAA,OAAKT,MAAM,CAACU,cAAc,CAAC,IAAI,EAAEN,IAAI,EAAE;UAC5DO,GAAG,EAAEA,CAAA,KAAM,IAAI,CAACjB,QAAQ,CAACU,IAAI,CAAC,CAACC,KAAK;UACpCO,GAAG,EAAEC,CAAC,IAAI,IAAI,CAACnB,QAAQ,CAACU,IAAI,CAAC,CAACC,KAAK,GAAGQ;QACxC,CAAC,CAAC;MAAA,EAAC;MACH,IAAIhB,MAAM,EAAEA,MAAM,CAAC,IAAI,CAAC;IAC1B;EAEF,CAAC;AACH;AAEA,SAASJ,cAAc"},"metadata":{},"sourceType":"module"}