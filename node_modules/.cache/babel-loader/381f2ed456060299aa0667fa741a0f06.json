{"ast":null,"code":"/**\n * Lightweight thenable implementation that is entirely self-contained within a single\n * function with no external dependencies so it can be easily shipped across to a WorkerModule.\n *\n * This implementation conforms fully to the Promises/A+ spec so it can safely interoperate\n * with other thenable implementations. https://github.com/promises-aplus/promises-spec\n *\n * *However*, it is _not_ a full implementation of ES2015 Promises, e.g. it does not\n * have the same constructor signature and does not expose a `catch` method or the static\n * `resolve`/`reject`/`all`/`race` initializer methods. If you need to hand a Thenable\n * instance off to consuming code that may expect a true Promise, you'll want to wrap it\n * in a native-or-polyfilled Promise first.\n *\n * (Why yet another Promises/A+ implementation? Great question. We needed a polyfill-like\n * thing that was (a) wrapped in a single function for easy serialization across to a Worker,\n * and (b) was as small as possible -- at ~900B minified (~500B gzipped) this is the smallest\n * implementation I've found. And also, exercises like this are challenging and fun.)\n */\nfunction BespokeThenable() {\n  var state = 0; // 0=pending, 1=fulfilled, -1=rejected\n  var queue = [];\n  var value;\n  var scheduled = 0;\n  var completeCalled = 0;\n  function then(onResolve, onReject) {\n    var nextThenable = BespokeThenable();\n    function handleNext() {\n      var cb = state > 0 ? onResolve : onReject;\n      if (isFn(cb)) {\n        try {\n          var result = cb(value);\n          if (result === nextThenable) {\n            recursiveError();\n          }\n          var resultThen = getThenableThen(result);\n          if (resultThen) {\n            resultThen.call(result, nextThenable.resolve, nextThenable.reject);\n          } else {\n            nextThenable.resolve(result);\n          }\n        } catch (err) {\n          nextThenable.reject(err);\n        }\n      } else {\n        nextThenable[state > 0 ? 'resolve' : 'reject'](value);\n      }\n    }\n    queue.push(handleNext);\n    if (state) {\n      scheduleQueueFlush();\n    }\n    return nextThenable;\n  }\n  var resolve = oneTime(function (val) {\n    if (!completeCalled) {\n      complete(1, val);\n    }\n  });\n  var reject = oneTime(function (reason) {\n    if (!completeCalled) {\n      complete(-1, reason);\n    }\n  });\n  function complete(st, val) {\n    completeCalled++;\n    var ignoreThrow = 0;\n    try {\n      if (val === thenableObj) {\n        recursiveError();\n      }\n      var valThen = st > 0 && getThenableThen(val);\n      if (valThen) {\n        valThen.call(val, oneTime(function (v) {\n          ignoreThrow++;\n          complete(1, v);\n        }), oneTime(function (v) {\n          ignoreThrow++;\n          complete(-1, v);\n        }));\n      } else {\n        state = st;\n        value = val;\n        scheduleQueueFlush();\n      }\n    } catch (e) {\n      if (!state && !ignoreThrow) {\n        complete(-1, e);\n      }\n    }\n  }\n  function scheduleQueueFlush() {\n    if (!scheduled) {\n      setTimeout(flushQueue, 0); //TODO setImmediate or postMessage approach if available?\n      scheduled = 1;\n    }\n  }\n  function flushQueue() {\n    var q = queue;\n    scheduled = 0;\n    queue = [];\n    q.forEach(callIt);\n  }\n  function callIt(fn) {\n    fn();\n  }\n  function getThenableThen(val) {\n    var valThen = val && (isFn(val) || typeof val === 'object') && val.then;\n    return isFn(valThen) && valThen;\n  }\n  function oneTime(fn) {\n    var called = 0;\n    return function () {\n      var args = [],\n        len = arguments.length;\n      while (len--) args[len] = arguments[len];\n      if (!called++) {\n        fn.apply(this, args);\n      }\n    };\n  }\n  function recursiveError() {\n    throw new TypeError('Chaining cycle detected');\n  }\n  var isFn = function (v) {\n    return typeof v === 'function';\n  };\n  var thenableObj = {\n    then: then,\n    resolve: resolve,\n    reject: reject\n  };\n  return thenableObj;\n}\n\n/**\n * Thenable implementation that uses a native Promise under the covers. This implementation\n * is preferred if Promise is available, for better performance and dev tools integration.\n * @constructor\n */\nfunction NativePromiseThenable() {\n  var resolve, reject;\n  var promise = new Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  return {\n    then: promise.then.bind(promise),\n    resolve: resolve,\n    reject: reject\n  };\n}\n\n/**\n * Promise.all() impl:\n */\nBespokeThenable.all = NativePromiseThenable.all = function (items) {\n  var resultCount = 0;\n  var results = [];\n  var out = DefaultThenable();\n  if (items.length === 0) {\n    out.resolve([]);\n  } else {\n    items.forEach(function (item, i) {\n      var itemThenable = DefaultThenable();\n      itemThenable.resolve(item);\n      itemThenable.then(function (res) {\n        resultCount++;\n        results[i] = res;\n        if (resultCount === items.length) {\n          out.resolve(results);\n        }\n      }, out.reject);\n    });\n  }\n  return out;\n};\n\n/**\n * Choose the best Thenable implementation and export it as the default.\n */\nvar DefaultThenable = typeof Promise === 'function' ? NativePromiseThenable : BespokeThenable;\n\n/**\n * Main content for the worker that handles the loading and execution of\n * modules within it.\n */\nfunction workerBootstrap() {\n  var modules = Object.create(null);\n\n  // Handle messages for registering a module\n  function registerModule(ref, callback) {\n    var id = ref.id;\n    var name = ref.name;\n    var dependencies = ref.dependencies;\n    if (dependencies === void 0) dependencies = [];\n    var init = ref.init;\n    if (init === void 0) init = function () {};\n    var getTransferables = ref.getTransferables;\n    if (getTransferables === void 0) getTransferables = null;\n\n    // Only register once\n    if (modules[id]) {\n      return;\n    }\n    try {\n      // If any dependencies are modules, ensure they're registered and grab their value\n      dependencies = dependencies.map(function (dep) {\n        if (dep && dep.isWorkerModule) {\n          registerModule(dep, function (depResult) {\n            if (depResult instanceof Error) {\n              throw depResult;\n            }\n          });\n          dep = modules[dep.id].value;\n        }\n        return dep;\n      });\n\n      // Rehydrate functions\n      init = rehydrate(\"<\" + name + \">.init\", init);\n      if (getTransferables) {\n        getTransferables = rehydrate(\"<\" + name + \">.getTransferables\", getTransferables);\n      }\n\n      // Initialize the module and store its value\n      var value = null;\n      if (typeof init === 'function') {\n        value = init.apply(void 0, dependencies);\n      } else {\n        console.error('worker module init function failed to rehydrate');\n      }\n      modules[id] = {\n        id: id,\n        value: value,\n        getTransferables: getTransferables\n      };\n      callback(value);\n    } catch (err) {\n      if (!(err && err.noLog)) {\n        console.error(err);\n      }\n      callback(err);\n    }\n  }\n\n  // Handle messages for calling a registered module's result function\n  function callModule(ref, callback) {\n    var ref$1;\n    var id = ref.id;\n    var args = ref.args;\n    if (!modules[id] || typeof modules[id].value !== 'function') {\n      callback(new Error(\"Worker module \" + id + \": not found or its 'init' did not return a function\"));\n    }\n    try {\n      var result = (ref$1 = modules[id]).value.apply(ref$1, args);\n      if (result && typeof result.then === 'function') {\n        result.then(handleResult, function (rej) {\n          return callback(rej instanceof Error ? rej : new Error('' + rej));\n        });\n      } else {\n        handleResult(result);\n      }\n    } catch (err) {\n      callback(err);\n    }\n    function handleResult(result) {\n      try {\n        var tx = modules[id].getTransferables && modules[id].getTransferables(result);\n        if (!tx || !Array.isArray(tx) || !tx.length) {\n          tx = undefined; //postMessage is very picky about not passing null or empty transferables\n        }\n        callback(result, tx);\n      } catch (err) {\n        console.error(err);\n        callback(err);\n      }\n    }\n  }\n  function rehydrate(name, str) {\n    var result = void 0;\n    self.troikaDefine = function (r) {\n      return result = r;\n    };\n    var url = URL.createObjectURL(new Blob([\"/** \" + name.replace(/\\*/g, '') + \" **/\\n\\ntroikaDefine(\\n\" + str + \"\\n)\"], {\n      type: 'application/javascript'\n    }));\n    try {\n      importScripts(url);\n    } catch (err) {\n      console.error(err);\n    }\n    URL.revokeObjectURL(url);\n    delete self.troikaDefine;\n    return result;\n  }\n\n  // Handler for all messages within the worker\n  self.addEventListener('message', function (e) {\n    var ref = e.data;\n    var messageId = ref.messageId;\n    var action = ref.action;\n    var data = ref.data;\n    try {\n      // Module registration\n      if (action === 'registerModule') {\n        registerModule(data, function (result) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: {\n                isCallable: typeof result === 'function'\n              }\n            });\n          }\n        });\n      }\n      // Invocation\n      if (action === 'callModule') {\n        callModule(data, function (result, transferables) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: result\n            }, transferables || undefined);\n          }\n        });\n      }\n    } catch (err) {\n      postMessage({\n        messageId: messageId,\n        success: false,\n        error: err.stack\n      });\n    }\n  });\n}\n\n/**\n * Fallback for `defineWorkerModule` that behaves identically but runs in the main\n * thread, for when the execution environment doesn't support web workers or they\n * are disallowed due to e.g. CSP security restrictions.\n */\nfunction defineMainThreadModule(options) {\n  var moduleFunc = function () {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    return moduleFunc._getInitResult().then(function (initResult) {\n      if (typeof initResult === 'function') {\n        return initResult.apply(void 0, args);\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function');\n      }\n    });\n  };\n  moduleFunc._getInitResult = function () {\n    // We can ignore getTransferables in main thread. TODO workerId?\n    var dependencies = options.dependencies;\n    var init = options.init;\n\n    // Resolve dependencies\n    dependencies = Array.isArray(dependencies) ? dependencies.map(function (dep) {\n      return dep && dep._getInitResult ? dep._getInitResult() : dep;\n    }) : [];\n\n    // Invoke init with the resolved dependencies\n    var initThenable = DefaultThenable.all(dependencies).then(function (deps) {\n      return init.apply(null, deps);\n    });\n\n    // Cache the resolved promise for subsequent calls\n    moduleFunc._getInitResult = function () {\n      return initThenable;\n    };\n    return initThenable;\n  };\n  return moduleFunc;\n}\nvar supportsWorkers = function () {\n  var supported = false;\n\n  // Only attempt worker initialization in browsers; elsewhere it would just be\n  // noise e.g. loading into a Node environment for SSR.\n  if (typeof window !== 'undefined' && typeof window.document !== 'undefined') {\n    try {\n      // TODO additional checks for things like importScripts within the worker?\n      //  Would need to be an async check.\n      var worker = new Worker(URL.createObjectURL(new Blob([''], {\n        type: 'application/javascript'\n      })));\n      worker.terminate();\n      supported = true;\n    } catch (err) {\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'test') ;else {\n        console.log(\"Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [\" + err.message + \"]\");\n      }\n    }\n  }\n\n  // Cached result\n  supportsWorkers = function () {\n    return supported;\n  };\n  return supported;\n};\nvar _workerModuleId = 0;\nvar _messageId = 0;\nvar _allowInitAsString = false;\nvar workers = Object.create(null);\nvar openRequests = /*#__PURE__*/function () {\n  var obj = Object.create(null);\n  obj._count = 0;\n  return obj;\n}();\n\n/**\n * Define a module of code that will be executed with a web worker. This provides a simple\n * interface for moving chunks of logic off the main thread, and managing their dependencies\n * among one another.\n *\n * @param {object} options\n * @param {function} options.init\n * @param {array} [options.dependencies]\n * @param {function} [options.getTransferables]\n * @param {string} [options.name]\n * @param {string} [options.workerId]\n * @return {function(...[*]): {then}}\n */\nfunction defineWorkerModule(options) {\n  if ((!options || typeof options.init !== 'function') && !_allowInitAsString) {\n    throw new Error('requires `options.init` function');\n  }\n  var dependencies = options.dependencies;\n  var init = options.init;\n  var getTransferables = options.getTransferables;\n  var workerId = options.workerId;\n  if (!supportsWorkers()) {\n    return defineMainThreadModule(options);\n  }\n  if (workerId == null) {\n    workerId = '#default';\n  }\n  var id = \"workerModule\" + ++_workerModuleId;\n  var name = options.name || id;\n  var registrationThenable = null;\n  dependencies = dependencies && dependencies.map(function (dep) {\n    // Wrap raw functions as worker modules with no dependencies\n    if (typeof dep === 'function' && !dep.workerModuleData) {\n      _allowInitAsString = true;\n      dep = defineWorkerModule({\n        workerId: workerId,\n        name: \"<\" + name + \"> function dependency: \" + dep.name,\n        init: \"function(){return (\\n\" + stringifyFunction(dep) + \"\\n)}\"\n      });\n      _allowInitAsString = false;\n    }\n    // Grab postable data for worker modules\n    if (dep && dep.workerModuleData) {\n      dep = dep.workerModuleData;\n    }\n    return dep;\n  });\n  function moduleFunc() {\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n\n    // Register this module if needed\n    if (!registrationThenable) {\n      registrationThenable = callWorker(workerId, 'registerModule', moduleFunc.workerModuleData);\n    }\n\n    // Invoke the module, returning a thenable\n    return registrationThenable.then(function (ref) {\n      var isCallable = ref.isCallable;\n      if (isCallable) {\n        return callWorker(workerId, 'callModule', {\n          id: id,\n          args: args\n        });\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function');\n      }\n    });\n  }\n  moduleFunc.workerModuleData = {\n    isWorkerModule: true,\n    id: id,\n    name: name,\n    dependencies: dependencies,\n    init: stringifyFunction(init),\n    getTransferables: getTransferables && stringifyFunction(getTransferables)\n  };\n  return moduleFunc;\n}\n\n/**\n * Stringifies a function into a form that can be deserialized in the worker\n * @param fn\n */\nfunction stringifyFunction(fn) {\n  var str = fn.toString();\n  // If it was defined in object method/property format, it needs to be modified\n  if (!/^function/.test(str) && /^\\w+\\s*\\(/.test(str)) {\n    str = 'function ' + str;\n  }\n  return str;\n}\nfunction getWorker(workerId) {\n  var worker = workers[workerId];\n  if (!worker) {\n    // Bootstrap the worker's content\n    var bootstrap = stringifyFunction(workerBootstrap);\n\n    // Create the worker from the bootstrap function content\n    worker = workers[workerId] = new Worker(URL.createObjectURL(new Blob([\"/** Worker Module Bootstrap: \" + workerId.replace(/\\*/g, '') + \" **/\\n\\n;(\" + bootstrap + \")()\"], {\n      type: 'application/javascript'\n    })));\n\n    // Single handler for response messages from the worker\n    worker.onmessage = function (e) {\n      var response = e.data;\n      var msgId = response.messageId;\n      var callback = openRequests[msgId];\n      if (!callback) {\n        throw new Error('WorkerModule response with empty or unknown messageId');\n      }\n      delete openRequests[msgId];\n      openRequests._count--;\n      callback(response);\n    };\n  }\n  return worker;\n}\n\n// Issue a call to the worker with a callback to handle the response\nfunction callWorker(workerId, action, data) {\n  var thenable = DefaultThenable();\n  var messageId = ++_messageId;\n  openRequests[messageId] = function (response) {\n    if (response.success) {\n      thenable.resolve(response.result);\n    } else {\n      thenable.reject(new Error(\"Error in worker \" + action + \" call: \" + response.error));\n    }\n  };\n  openRequests._count++;\n  if (openRequests._count > 1000) {\n    //detect leaks\n    console.warn('Large number of open WorkerModule requests, some may not be returning');\n  }\n  getWorker(workerId).postMessage({\n    messageId: messageId,\n    action: action,\n    data: data\n  });\n  return thenable;\n}\n\n/**\n * Just the {@link Thenable} function wrapped as a worker module. If another worker\n * module needs Thenable as a dependency, it's better to pass this module rather than\n * the raw function in its `dependencies` array so it only gets registered once.\n */\nvar ThenableWorkerModule = /*#__PURE__*/defineWorkerModule({\n  name: 'Thenable',\n  dependencies: [DefaultThenable],\n  init: function (Thenable) {\n    return Thenable;\n  }\n});\nexport { DefaultThenable as Thenable, ThenableWorkerModule, defineWorkerModule, stringifyFunction };","map":{"version":3,"names":["BespokeThenable","state","queue","value","scheduled","completeCalled","then","onResolve","onReject","nextThenable","handleNext","cb","isFn","result","recursiveError","resultThen","getThenableThen","call","resolve","reject","err","push","scheduleQueueFlush","oneTime","val","complete","reason","st","ignoreThrow","thenableObj","valThen","v","e","setTimeout","flushQueue","q","forEach","callIt","fn","called","args","len","arguments","length","apply","TypeError","NativePromiseThenable","promise","Promise","res","rej","bind","all","items","resultCount","results","out","DefaultThenable","item","i","itemThenable","workerBootstrap","modules","Object","create","registerModule","ref","callback","id","name","dependencies","init","getTransferables","map","dep","isWorkerModule","depResult","Error","rehydrate","console","error","noLog","callModule","ref$1","handleResult","tx","Array","isArray","undefined","str","self","troikaDefine","r","url","URL","createObjectURL","Blob","replace","type","importScripts","revokeObjectURL","addEventListener","data","messageId","action","postMessage","success","message","isCallable","transferables","stack","defineMainThreadModule","options","moduleFunc","_getInitResult","initResult","initThenable","deps","supportsWorkers","supported","window","document","worker","Worker","terminate","process","env","NODE_ENV","log","_workerModuleId","_messageId","_allowInitAsString","workers","openRequests","obj","_count","defineWorkerModule","workerId","registrationThenable","workerModuleData","stringifyFunction","callWorker","toString","test","getWorker","bootstrap","onmessage","response","msgId","thenable","warn","ThenableWorkerModule","Thenable"],"sources":["/Users/mitchellkimbell/Desktop/space-frontend/node_modules/troika-worker-utils/dist/troika-worker-utils.esm.js"],"sourcesContent":["/**\n * Lightweight thenable implementation that is entirely self-contained within a single\n * function with no external dependencies so it can be easily shipped across to a WorkerModule.\n *\n * This implementation conforms fully to the Promises/A+ spec so it can safely interoperate\n * with other thenable implementations. https://github.com/promises-aplus/promises-spec\n *\n * *However*, it is _not_ a full implementation of ES2015 Promises, e.g. it does not\n * have the same constructor signature and does not expose a `catch` method or the static\n * `resolve`/`reject`/`all`/`race` initializer methods. If you need to hand a Thenable\n * instance off to consuming code that may expect a true Promise, you'll want to wrap it\n * in a native-or-polyfilled Promise first.\n *\n * (Why yet another Promises/A+ implementation? Great question. We needed a polyfill-like\n * thing that was (a) wrapped in a single function for easy serialization across to a Worker,\n * and (b) was as small as possible -- at ~900B minified (~500B gzipped) this is the smallest\n * implementation I've found. And also, exercises like this are challenging and fun.)\n */\nfunction BespokeThenable() {\n  var state = 0; // 0=pending, 1=fulfilled, -1=rejected\n  var queue = [];\n  var value;\n  var scheduled = 0;\n  var completeCalled = 0;\n\n  function then(onResolve, onReject) {\n    var nextThenable = BespokeThenable();\n\n    function handleNext() {\n      var cb = state > 0 ? onResolve : onReject;\n      if (isFn(cb)) {\n        try {\n          var result = cb(value);\n          if (result === nextThenable) {\n            recursiveError();\n          }\n          var resultThen = getThenableThen(result);\n          if (resultThen) {\n            resultThen.call(result, nextThenable.resolve, nextThenable.reject);\n          } else {\n            nextThenable.resolve(result);\n          }\n        } catch (err) {\n          nextThenable.reject(err);\n        }\n      } else {\n        nextThenable[state > 0 ? 'resolve' : 'reject'](value);\n      }\n    }\n\n    queue.push(handleNext);\n    if (state) {\n      scheduleQueueFlush();\n    }\n    return nextThenable\n  }\n\n  var resolve = oneTime(function (val) {\n    if (!completeCalled) {\n      complete(1, val);\n    }\n  });\n\n  var reject = oneTime(function (reason) {\n    if (!completeCalled) {\n      complete(-1, reason);\n    }\n  });\n\n  function complete(st, val) {\n    completeCalled++;\n    var ignoreThrow = 0;\n    try {\n      if (val === thenableObj) {\n        recursiveError();\n      }\n      var valThen = st > 0 && getThenableThen(val);\n      if (valThen) {\n        valThen.call(val, oneTime(function (v) {\n          ignoreThrow++;\n          complete(1, v);\n        }), oneTime(function (v) {\n          ignoreThrow++;\n          complete(-1, v);\n        }));\n      } else {\n        state = st;\n        value = val;\n        scheduleQueueFlush();\n      }\n    } catch(e) {\n      if (!state && !ignoreThrow) {\n        complete(-1, e);\n      }\n    }\n  }\n\n  function scheduleQueueFlush() {\n    if (!scheduled) {\n      setTimeout(flushQueue, 0); //TODO setImmediate or postMessage approach if available?\n      scheduled = 1;\n    }\n  }\n\n  function flushQueue() {\n    var q = queue;\n    scheduled = 0;\n    queue = [];\n    q.forEach(callIt);\n  }\n\n  function callIt(fn) {\n    fn();\n  }\n\n  function getThenableThen(val) {\n    var valThen = val && (isFn(val) || typeof val === 'object') && val.then;\n    return isFn(valThen) && valThen\n  }\n\n  function oneTime(fn) {\n    var called = 0;\n    return function() {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      if (!called++) {\n        fn.apply(this, args);\n      }\n    }\n  }\n\n  function recursiveError() {\n    throw new TypeError('Chaining cycle detected')\n  }\n\n  var isFn = function (v) { return typeof v === 'function'; };\n\n  var thenableObj = {\n    then: then,\n    resolve: resolve,\n    reject: reject\n  };\n  return thenableObj\n}\n\n\n/**\n * Thenable implementation that uses a native Promise under the covers. This implementation\n * is preferred if Promise is available, for better performance and dev tools integration.\n * @constructor\n */\nfunction NativePromiseThenable() {\n  var resolve, reject;\n  var promise = new Promise(function (res, rej) {\n    resolve = res;\n    reject = rej;\n  });\n  return {\n    then: promise.then.bind(promise),\n    resolve: resolve,\n    reject: reject\n  }\n}\n\n/**\n * Promise.all() impl:\n */\nBespokeThenable.all = NativePromiseThenable.all = function(items) {\n  var resultCount = 0;\n  var results = [];\n  var out = DefaultThenable();\n  if (items.length === 0) {\n    out.resolve([]);\n  } else {\n    items.forEach(function (item, i) {\n      var itemThenable = DefaultThenable();\n      itemThenable.resolve(item);\n      itemThenable.then(function (res) {\n        resultCount++;\n        results[i] = res;\n        if (resultCount === items.length) {\n          out.resolve(results);\n        }\n      }, out.reject);\n    });\n  }\n  return out\n};\n\n\n/**\n * Choose the best Thenable implementation and export it as the default.\n */\nvar DefaultThenable = typeof Promise === 'function' ? NativePromiseThenable : BespokeThenable;\n\n/**\n * Main content for the worker that handles the loading and execution of\n * modules within it.\n */\nfunction workerBootstrap() {\n  var modules = Object.create(null);\n\n  // Handle messages for registering a module\n  function registerModule(ref, callback) {\n    var id = ref.id;\n    var name = ref.name;\n    var dependencies = ref.dependencies; if ( dependencies === void 0 ) dependencies = [];\n    var init = ref.init; if ( init === void 0 ) init = function(){};\n    var getTransferables = ref.getTransferables; if ( getTransferables === void 0 ) getTransferables = null;\n\n    // Only register once\n    if (modules[id]) { return }\n\n    try {\n      // If any dependencies are modules, ensure they're registered and grab their value\n      dependencies = dependencies.map(function (dep) {\n        if (dep && dep.isWorkerModule) {\n          registerModule(dep, function (depResult) {\n            if (depResult instanceof Error) { throw depResult }\n          });\n          dep = modules[dep.id].value;\n        }\n        return dep\n      });\n\n      // Rehydrate functions\n      init = rehydrate((\"<\" + name + \">.init\"), init);\n      if (getTransferables) {\n        getTransferables = rehydrate((\"<\" + name + \">.getTransferables\"), getTransferables);\n      }\n\n      // Initialize the module and store its value\n      var value = null;\n      if (typeof init === 'function') {\n        value = init.apply(void 0, dependencies);\n      } else {\n        console.error('worker module init function failed to rehydrate');\n      }\n      modules[id] = {\n        id: id,\n        value: value,\n        getTransferables: getTransferables\n      };\n      callback(value);\n    } catch(err) {\n      if (!(err && err.noLog)) {\n        console.error(err);\n      }\n      callback(err);\n    }\n  }\n\n  // Handle messages for calling a registered module's result function\n  function callModule(ref, callback) {\n    var ref$1;\n\n    var id = ref.id;\n    var args = ref.args;\n    if (!modules[id] || typeof modules[id].value !== 'function') {\n      callback(new Error((\"Worker module \" + id + \": not found or its 'init' did not return a function\")));\n    }\n    try {\n      var result = (ref$1 = modules[id]).value.apply(ref$1, args);\n      if (result && typeof result.then === 'function') {\n        result.then(handleResult, function (rej) { return callback(rej instanceof Error ? rej : new Error('' + rej)); });\n      } else {\n        handleResult(result);\n      }\n    } catch(err) {\n      callback(err);\n    }\n    function handleResult(result) {\n      try {\n        var tx = modules[id].getTransferables && modules[id].getTransferables(result);\n        if (!tx || !Array.isArray(tx) || !tx.length) {\n          tx = undefined; //postMessage is very picky about not passing null or empty transferables\n        }\n        callback(result, tx);\n      } catch(err) {\n        console.error(err);\n        callback(err);\n      }\n    }\n  }\n\n  function rehydrate(name, str) {\n    var result = void 0;\n    self.troikaDefine = function (r) { return result = r; };\n    var url = URL.createObjectURL(\n      new Blob(\n        [(\"/** \" + (name.replace(/\\*/g, '')) + \" **/\\n\\ntroikaDefine(\\n\" + str + \"\\n)\")],\n        {type: 'application/javascript'}\n      )\n    );\n    try {\n      importScripts(url);\n    } catch(err) {\n      console.error(err);\n    }\n    URL.revokeObjectURL(url);\n    delete self.troikaDefine;\n    return result\n  }\n\n  // Handler for all messages within the worker\n  self.addEventListener('message', function (e) {\n    var ref = e.data;\n    var messageId = ref.messageId;\n    var action = ref.action;\n    var data = ref.data;\n    try {\n      // Module registration\n      if (action === 'registerModule') {\n        registerModule(data, function (result) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: {isCallable: typeof result === 'function'}\n            });\n          }\n        });\n      }\n      // Invocation\n      if (action === 'callModule') {\n        callModule(data, function (result, transferables) {\n          if (result instanceof Error) {\n            postMessage({\n              messageId: messageId,\n              success: false,\n              error: result.message\n            });\n          } else {\n            postMessage({\n              messageId: messageId,\n              success: true,\n              result: result\n            }, transferables || undefined);\n          }\n        });\n      }\n    } catch(err) {\n      postMessage({\n        messageId: messageId,\n        success: false,\n        error: err.stack\n      });\n    }\n  });\n}\n\n/**\n * Fallback for `defineWorkerModule` that behaves identically but runs in the main\n * thread, for when the execution environment doesn't support web workers or they\n * are disallowed due to e.g. CSP security restrictions.\n */\nfunction defineMainThreadModule(options) {\n  var moduleFunc = function() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return moduleFunc._getInitResult().then(function (initResult) {\n      if (typeof initResult === 'function') {\n        return initResult.apply(void 0, args)\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function')\n      }\n    })\n  };\n  moduleFunc._getInitResult = function() {\n    // We can ignore getTransferables in main thread. TODO workerId?\n    var dependencies = options.dependencies;\n    var init = options.init;\n\n    // Resolve dependencies\n    dependencies = Array.isArray(dependencies) ? dependencies.map(function (dep) { return dep && dep._getInitResult ? dep._getInitResult() : dep; }\n    ) : [];\n\n    // Invoke init with the resolved dependencies\n    var initThenable = DefaultThenable.all(dependencies).then(function (deps) {\n      return init.apply(null, deps)\n    });\n\n    // Cache the resolved promise for subsequent calls\n    moduleFunc._getInitResult = function () { return initThenable; };\n\n    return initThenable\n  };\n  return moduleFunc\n}\n\nvar supportsWorkers = function () {\n  var supported = false;\n\n  // Only attempt worker initialization in browsers; elsewhere it would just be\n  // noise e.g. loading into a Node environment for SSR.\n  if (typeof window !== 'undefined' && typeof window.document !== 'undefined') {\n    try {\n      // TODO additional checks for things like importScripts within the worker?\n      //  Would need to be an async check.\n      var worker = new Worker(\n        URL.createObjectURL(new Blob([''], { type: 'application/javascript' }))\n      );\n      worker.terminate();\n      supported = true;\n    } catch (err) {\n      if (typeof process !== 'undefined' && process.env.NODE_ENV === 'test') ; else {\n        console.log(\n          (\"Troika createWorkerModule: web workers not allowed; falling back to main thread execution. Cause: [\" + (err.message) + \"]\")\n        );\n      }\n    }\n  }\n\n  // Cached result\n  supportsWorkers = function () { return supported; };\n  return supported\n};\n\nvar _workerModuleId = 0;\nvar _messageId = 0;\nvar _allowInitAsString = false;\nvar workers = Object.create(null);\nvar openRequests = /*#__PURE__*/(function () {\n  var obj = Object.create(null);\n  obj._count = 0;\n  return obj\n})();\n\n\n/**\n * Define a module of code that will be executed with a web worker. This provides a simple\n * interface for moving chunks of logic off the main thread, and managing their dependencies\n * among one another.\n *\n * @param {object} options\n * @param {function} options.init\n * @param {array} [options.dependencies]\n * @param {function} [options.getTransferables]\n * @param {string} [options.name]\n * @param {string} [options.workerId]\n * @return {function(...[*]): {then}}\n */\nfunction defineWorkerModule(options) {\n  if ((!options || typeof options.init !== 'function') && !_allowInitAsString) {\n    throw new Error('requires `options.init` function')\n  }\n  var dependencies = options.dependencies;\n  var init = options.init;\n  var getTransferables = options.getTransferables;\n  var workerId = options.workerId;\n\n  if (!supportsWorkers()) {\n    return defineMainThreadModule(options)\n  }\n\n  if (workerId == null) {\n    workerId = '#default';\n  }\n  var id = \"workerModule\" + (++_workerModuleId);\n  var name = options.name || id;\n  var registrationThenable = null;\n\n  dependencies = dependencies && dependencies.map(function (dep) {\n    // Wrap raw functions as worker modules with no dependencies\n    if (typeof dep === 'function' && !dep.workerModuleData) {\n      _allowInitAsString = true;\n      dep = defineWorkerModule({\n        workerId: workerId,\n        name: (\"<\" + name + \"> function dependency: \" + (dep.name)),\n        init: (\"function(){return (\\n\" + (stringifyFunction(dep)) + \"\\n)}\")\n      });\n      _allowInitAsString = false;\n    }\n    // Grab postable data for worker modules\n    if (dep && dep.workerModuleData) {\n      dep = dep.workerModuleData;\n    }\n    return dep\n  });\n\n  function moduleFunc() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    // Register this module if needed\n    if (!registrationThenable) {\n      registrationThenable = callWorker(workerId,'registerModule', moduleFunc.workerModuleData);\n    }\n\n    // Invoke the module, returning a thenable\n    return registrationThenable.then(function (ref) {\n      var isCallable = ref.isCallable;\n\n      if (isCallable) {\n        return callWorker(workerId,'callModule', {id: id, args: args})\n      } else {\n        throw new Error('Worker module function was called but `init` did not return a callable function')\n      }\n    })\n  }\n  moduleFunc.workerModuleData = {\n    isWorkerModule: true,\n    id: id,\n    name: name,\n    dependencies: dependencies,\n    init: stringifyFunction(init),\n    getTransferables: getTransferables && stringifyFunction(getTransferables)\n  };\n  return moduleFunc\n}\n\n/**\n * Stringifies a function into a form that can be deserialized in the worker\n * @param fn\n */\nfunction stringifyFunction(fn) {\n  var str = fn.toString();\n  // If it was defined in object method/property format, it needs to be modified\n  if (!/^function/.test(str) && /^\\w+\\s*\\(/.test(str)) {\n    str = 'function ' + str;\n  }\n  return str\n}\n\n\nfunction getWorker(workerId) {\n  var worker = workers[workerId];\n  if (!worker) {\n    // Bootstrap the worker's content\n    var bootstrap = stringifyFunction(workerBootstrap);\n\n    // Create the worker from the bootstrap function content\n    worker = workers[workerId] = new Worker(\n      URL.createObjectURL(\n        new Blob(\n          [(\"/** Worker Module Bootstrap: \" + (workerId.replace(/\\*/g, '')) + \" **/\\n\\n;(\" + bootstrap + \")()\")],\n          {type: 'application/javascript'}\n        )\n      )\n    );\n\n    // Single handler for response messages from the worker\n    worker.onmessage = function (e) {\n      var response = e.data;\n      var msgId = response.messageId;\n      var callback = openRequests[msgId];\n      if (!callback) {\n        throw new Error('WorkerModule response with empty or unknown messageId')\n      }\n      delete openRequests[msgId];\n      openRequests._count--;\n      callback(response);\n    };\n  }\n  return worker\n}\n\n// Issue a call to the worker with a callback to handle the response\nfunction callWorker(workerId, action, data) {\n  var thenable = DefaultThenable();\n  var messageId = ++_messageId;\n  openRequests[messageId] = function (response) {\n    if (response.success) {\n      thenable.resolve(response.result);\n    } else {\n      thenable.reject(new Error((\"Error in worker \" + action + \" call: \" + (response.error))));\n    }\n  };\n  openRequests._count++;\n  if (openRequests._count > 1000) { //detect leaks\n    console.warn('Large number of open WorkerModule requests, some may not be returning');\n  }\n  getWorker(workerId).postMessage({\n    messageId: messageId,\n    action: action,\n    data: data\n  });\n  return thenable\n}\n\n/**\n * Just the {@link Thenable} function wrapped as a worker module. If another worker\n * module needs Thenable as a dependency, it's better to pass this module rather than\n * the raw function in its `dependencies` array so it only gets registered once.\n */\nvar ThenableWorkerModule = /*#__PURE__*/defineWorkerModule({\n  name: 'Thenable',\n  dependencies: [DefaultThenable],\n  init: function(Thenable) {\n    return Thenable\n  }\n});\n\nexport { DefaultThenable as Thenable, ThenableWorkerModule, defineWorkerModule, stringifyFunction };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAeA,CAAA,EAAG;EACzB,IAAIC,KAAK,GAAG,CAAC,CAAC,CAAC;EACf,IAAIC,KAAK,GAAG,EAAE;EACd,IAAIC,KAAK;EACT,IAAIC,SAAS,GAAG,CAAC;EACjB,IAAIC,cAAc,GAAG,CAAC;EAEtB,SAASC,IAAIA,CAACC,SAAS,EAAEC,QAAQ,EAAE;IACjC,IAAIC,YAAY,GAAGT,eAAe,CAAC,CAAC;IAEpC,SAASU,UAAUA,CAAA,EAAG;MACpB,IAAIC,EAAE,GAAGV,KAAK,GAAG,CAAC,GAAGM,SAAS,GAAGC,QAAQ;MACzC,IAAII,IAAI,CAACD,EAAE,CAAC,EAAE;QACZ,IAAI;UACF,IAAIE,MAAM,GAAGF,EAAE,CAACR,KAAK,CAAC;UACtB,IAAIU,MAAM,KAAKJ,YAAY,EAAE;YAC3BK,cAAc,CAAC,CAAC;UAClB;UACA,IAAIC,UAAU,GAAGC,eAAe,CAACH,MAAM,CAAC;UACxC,IAAIE,UAAU,EAAE;YACdA,UAAU,CAACE,IAAI,CAACJ,MAAM,EAAEJ,YAAY,CAACS,OAAO,EAAET,YAAY,CAACU,MAAM,CAAC;UACpE,CAAC,MAAM;YACLV,YAAY,CAACS,OAAO,CAACL,MAAM,CAAC;UAC9B;QACF,CAAC,CAAC,OAAOO,GAAG,EAAE;UACZX,YAAY,CAACU,MAAM,CAACC,GAAG,CAAC;QAC1B;MACF,CAAC,MAAM;QACLX,YAAY,CAACR,KAAK,GAAG,CAAC,GAAG,SAAS,GAAG,QAAQ,CAAC,CAACE,KAAK,CAAC;MACvD;IACF;IAEAD,KAAK,CAACmB,IAAI,CAACX,UAAU,CAAC;IACtB,IAAIT,KAAK,EAAE;MACTqB,kBAAkB,CAAC,CAAC;IACtB;IACA,OAAOb,YAAY;EACrB;EAEA,IAAIS,OAAO,GAAGK,OAAO,CAAC,UAAUC,GAAG,EAAE;IACnC,IAAI,CAACnB,cAAc,EAAE;MACnBoB,QAAQ,CAAC,CAAC,EAAED,GAAG,CAAC;IAClB;EACF,CAAC,CAAC;EAEF,IAAIL,MAAM,GAAGI,OAAO,CAAC,UAAUG,MAAM,EAAE;IACrC,IAAI,CAACrB,cAAc,EAAE;MACnBoB,QAAQ,CAAC,CAAC,CAAC,EAAEC,MAAM,CAAC;IACtB;EACF,CAAC,CAAC;EAEF,SAASD,QAAQA,CAACE,EAAE,EAAEH,GAAG,EAAE;IACzBnB,cAAc,EAAE;IAChB,IAAIuB,WAAW,GAAG,CAAC;IACnB,IAAI;MACF,IAAIJ,GAAG,KAAKK,WAAW,EAAE;QACvBf,cAAc,CAAC,CAAC;MAClB;MACA,IAAIgB,OAAO,GAAGH,EAAE,GAAG,CAAC,IAAIX,eAAe,CAACQ,GAAG,CAAC;MAC5C,IAAIM,OAAO,EAAE;QACXA,OAAO,CAACb,IAAI,CAACO,GAAG,EAAED,OAAO,CAAC,UAAUQ,CAAC,EAAE;UACrCH,WAAW,EAAE;UACbH,QAAQ,CAAC,CAAC,EAAEM,CAAC,CAAC;QAChB,CAAC,CAAC,EAAER,OAAO,CAAC,UAAUQ,CAAC,EAAE;UACvBH,WAAW,EAAE;UACbH,QAAQ,CAAC,CAAC,CAAC,EAAEM,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACL9B,KAAK,GAAG0B,EAAE;QACVxB,KAAK,GAAGqB,GAAG;QACXF,kBAAkB,CAAC,CAAC;MACtB;IACF,CAAC,CAAC,OAAMU,CAAC,EAAE;MACT,IAAI,CAAC/B,KAAK,IAAI,CAAC2B,WAAW,EAAE;QAC1BH,QAAQ,CAAC,CAAC,CAAC,EAAEO,CAAC,CAAC;MACjB;IACF;EACF;EAEA,SAASV,kBAAkBA,CAAA,EAAG;IAC5B,IAAI,CAAClB,SAAS,EAAE;MACd6B,UAAU,CAACC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC;MAC3B9B,SAAS,GAAG,CAAC;IACf;EACF;EAEA,SAAS8B,UAAUA,CAAA,EAAG;IACpB,IAAIC,CAAC,GAAGjC,KAAK;IACbE,SAAS,GAAG,CAAC;IACbF,KAAK,GAAG,EAAE;IACViC,CAAC,CAACC,OAAO,CAACC,MAAM,CAAC;EACnB;EAEA,SAASA,MAAMA,CAACC,EAAE,EAAE;IAClBA,EAAE,CAAC,CAAC;EACN;EAEA,SAAStB,eAAeA,CAACQ,GAAG,EAAE;IAC5B,IAAIM,OAAO,GAAGN,GAAG,KAAKZ,IAAI,CAACY,GAAG,CAAC,IAAI,OAAOA,GAAG,KAAK,QAAQ,CAAC,IAAIA,GAAG,CAAClB,IAAI;IACvE,OAAOM,IAAI,CAACkB,OAAO,CAAC,IAAIA,OAAO;EACjC;EAEA,SAASP,OAAOA,CAACe,EAAE,EAAE;IACnB,IAAIC,MAAM,GAAG,CAAC;IACd,OAAO,YAAW;MAChB,IAAIC,IAAI,GAAG,EAAE;QAAEC,GAAG,GAAGC,SAAS,CAACC,MAAM;MACrC,OAAQF,GAAG,EAAE,EAAGD,IAAI,CAAEC,GAAG,CAAE,GAAGC,SAAS,CAAED,GAAG,CAAE;MAE9C,IAAI,CAACF,MAAM,EAAE,EAAE;QACbD,EAAE,CAACM,KAAK,CAAC,IAAI,EAAEJ,IAAI,CAAC;MACtB;IACF,CAAC;EACH;EAEA,SAAS1B,cAAcA,CAAA,EAAG;IACxB,MAAM,IAAI+B,SAAS,CAAC,yBAAyB,CAAC;EAChD;EAEA,IAAIjC,IAAI,GAAG,SAAAA,CAAUmB,CAAC,EAAE;IAAE,OAAO,OAAOA,CAAC,KAAK,UAAU;EAAE,CAAC;EAE3D,IAAIF,WAAW,GAAG;IAChBvB,IAAI,EAAEA,IAAI;IACVY,OAAO,EAAEA,OAAO;IAChBC,MAAM,EAAEA;EACV,CAAC;EACD,OAAOU,WAAW;AACpB;;AAGA;AACA;AACA;AACA;AACA;AACA,SAASiB,qBAAqBA,CAAA,EAAG;EAC/B,IAAI5B,OAAO,EAAEC,MAAM;EACnB,IAAI4B,OAAO,GAAG,IAAIC,OAAO,CAAC,UAAUC,GAAG,EAAEC,GAAG,EAAE;IAC5ChC,OAAO,GAAG+B,GAAG;IACb9B,MAAM,GAAG+B,GAAG;EACd,CAAC,CAAC;EACF,OAAO;IACL5C,IAAI,EAAEyC,OAAO,CAACzC,IAAI,CAAC6C,IAAI,CAACJ,OAAO,CAAC;IAChC7B,OAAO,EAAEA,OAAO;IAChBC,MAAM,EAAEA;EACV,CAAC;AACH;;AAEA;AACA;AACA;AACAnB,eAAe,CAACoD,GAAG,GAAGN,qBAAqB,CAACM,GAAG,GAAG,UAASC,KAAK,EAAE;EAChE,IAAIC,WAAW,GAAG,CAAC;EACnB,IAAIC,OAAO,GAAG,EAAE;EAChB,IAAIC,GAAG,GAAGC,eAAe,CAAC,CAAC;EAC3B,IAAIJ,KAAK,CAACV,MAAM,KAAK,CAAC,EAAE;IACtBa,GAAG,CAACtC,OAAO,CAAC,EAAE,CAAC;EACjB,CAAC,MAAM;IACLmC,KAAK,CAACjB,OAAO,CAAC,UAAUsB,IAAI,EAAEC,CAAC,EAAE;MAC/B,IAAIC,YAAY,GAAGH,eAAe,CAAC,CAAC;MACpCG,YAAY,CAAC1C,OAAO,CAACwC,IAAI,CAAC;MAC1BE,YAAY,CAACtD,IAAI,CAAC,UAAU2C,GAAG,EAAE;QAC/BK,WAAW,EAAE;QACbC,OAAO,CAACI,CAAC,CAAC,GAAGV,GAAG;QAChB,IAAIK,WAAW,KAAKD,KAAK,CAACV,MAAM,EAAE;UAChCa,GAAG,CAACtC,OAAO,CAACqC,OAAO,CAAC;QACtB;MACF,CAAC,EAAEC,GAAG,CAACrC,MAAM,CAAC;IAChB,CAAC,CAAC;EACJ;EACA,OAAOqC,GAAG;AACZ,CAAC;;AAGD;AACA;AACA;AACA,IAAIC,eAAe,GAAG,OAAOT,OAAO,KAAK,UAAU,GAAGF,qBAAqB,GAAG9C,eAAe;;AAE7F;AACA;AACA;AACA;AACA,SAAS6D,eAAeA,CAAA,EAAG;EACzB,IAAIC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;;EAEjC;EACA,SAASC,cAAcA,CAACC,GAAG,EAAEC,QAAQ,EAAE;IACrC,IAAIC,EAAE,GAAGF,GAAG,CAACE,EAAE;IACf,IAAIC,IAAI,GAAGH,GAAG,CAACG,IAAI;IACnB,IAAIC,YAAY,GAAGJ,GAAG,CAACI,YAAY;IAAE,IAAKA,YAAY,KAAK,KAAK,CAAC,EAAGA,YAAY,GAAG,EAAE;IACrF,IAAIC,IAAI,GAAGL,GAAG,CAACK,IAAI;IAAE,IAAKA,IAAI,KAAK,KAAK,CAAC,EAAGA,IAAI,GAAG,SAAAA,CAAA,EAAU,CAAC,CAAC;IAC/D,IAAIC,gBAAgB,GAAGN,GAAG,CAACM,gBAAgB;IAAE,IAAKA,gBAAgB,KAAK,KAAK,CAAC,EAAGA,gBAAgB,GAAG,IAAI;;IAEvG;IACA,IAAIV,OAAO,CAACM,EAAE,CAAC,EAAE;MAAE;IAAO;IAE1B,IAAI;MACF;MACAE,YAAY,GAAGA,YAAY,CAACG,GAAG,CAAC,UAAUC,GAAG,EAAE;QAC7C,IAAIA,GAAG,IAAIA,GAAG,CAACC,cAAc,EAAE;UAC7BV,cAAc,CAACS,GAAG,EAAE,UAAUE,SAAS,EAAE;YACvC,IAAIA,SAAS,YAAYC,KAAK,EAAE;cAAE,MAAMD,SAAS;YAAC;UACpD,CAAC,CAAC;UACFF,GAAG,GAAGZ,OAAO,CAACY,GAAG,CAACN,EAAE,CAAC,CAACjE,KAAK;QAC7B;QACA,OAAOuE,GAAG;MACZ,CAAC,CAAC;;MAEF;MACAH,IAAI,GAAGO,SAAS,CAAE,GAAG,GAAGT,IAAI,GAAG,QAAQ,EAAGE,IAAI,CAAC;MAC/C,IAAIC,gBAAgB,EAAE;QACpBA,gBAAgB,GAAGM,SAAS,CAAE,GAAG,GAAGT,IAAI,GAAG,oBAAoB,EAAGG,gBAAgB,CAAC;MACrF;;MAEA;MACA,IAAIrE,KAAK,GAAG,IAAI;MAChB,IAAI,OAAOoE,IAAI,KAAK,UAAU,EAAE;QAC9BpE,KAAK,GAAGoE,IAAI,CAAC3B,KAAK,CAAC,KAAK,CAAC,EAAE0B,YAAY,CAAC;MAC1C,CAAC,MAAM;QACLS,OAAO,CAACC,KAAK,CAAC,iDAAiD,CAAC;MAClE;MACAlB,OAAO,CAACM,EAAE,CAAC,GAAG;QACZA,EAAE,EAAEA,EAAE;QACNjE,KAAK,EAAEA,KAAK;QACZqE,gBAAgB,EAAEA;MACpB,CAAC;MACDL,QAAQ,CAAChE,KAAK,CAAC;IACjB,CAAC,CAAC,OAAMiB,GAAG,EAAE;MACX,IAAI,EAAEA,GAAG,IAAIA,GAAG,CAAC6D,KAAK,CAAC,EAAE;QACvBF,OAAO,CAACC,KAAK,CAAC5D,GAAG,CAAC;MACpB;MACA+C,QAAQ,CAAC/C,GAAG,CAAC;IACf;EACF;;EAEA;EACA,SAAS8D,UAAUA,CAAChB,GAAG,EAAEC,QAAQ,EAAE;IACjC,IAAIgB,KAAK;IAET,IAAIf,EAAE,GAAGF,GAAG,CAACE,EAAE;IACf,IAAI5B,IAAI,GAAG0B,GAAG,CAAC1B,IAAI;IACnB,IAAI,CAACsB,OAAO,CAACM,EAAE,CAAC,IAAI,OAAON,OAAO,CAACM,EAAE,CAAC,CAACjE,KAAK,KAAK,UAAU,EAAE;MAC3DgE,QAAQ,CAAC,IAAIU,KAAK,CAAE,gBAAgB,GAAGT,EAAE,GAAG,qDAAsD,CAAC,CAAC;IACtG;IACA,IAAI;MACF,IAAIvD,MAAM,GAAG,CAACsE,KAAK,GAAGrB,OAAO,CAACM,EAAE,CAAC,EAAEjE,KAAK,CAACyC,KAAK,CAACuC,KAAK,EAAE3C,IAAI,CAAC;MAC3D,IAAI3B,MAAM,IAAI,OAAOA,MAAM,CAACP,IAAI,KAAK,UAAU,EAAE;QAC/CO,MAAM,CAACP,IAAI,CAAC8E,YAAY,EAAE,UAAUlC,GAAG,EAAE;UAAE,OAAOiB,QAAQ,CAACjB,GAAG,YAAY2B,KAAK,GAAG3B,GAAG,GAAG,IAAI2B,KAAK,CAAC,EAAE,GAAG3B,GAAG,CAAC,CAAC;QAAE,CAAC,CAAC;MAClH,CAAC,MAAM;QACLkC,YAAY,CAACvE,MAAM,CAAC;MACtB;IACF,CAAC,CAAC,OAAMO,GAAG,EAAE;MACX+C,QAAQ,CAAC/C,GAAG,CAAC;IACf;IACA,SAASgE,YAAYA,CAACvE,MAAM,EAAE;MAC5B,IAAI;QACF,IAAIwE,EAAE,GAAGvB,OAAO,CAACM,EAAE,CAAC,CAACI,gBAAgB,IAAIV,OAAO,CAACM,EAAE,CAAC,CAACI,gBAAgB,CAAC3D,MAAM,CAAC;QAC7E,IAAI,CAACwE,EAAE,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,EAAE,CAAC,IAAI,CAACA,EAAE,CAAC1C,MAAM,EAAE;UAC3C0C,EAAE,GAAGG,SAAS,CAAC,CAAC;QAClB;QACArB,QAAQ,CAACtD,MAAM,EAAEwE,EAAE,CAAC;MACtB,CAAC,CAAC,OAAMjE,GAAG,EAAE;QACX2D,OAAO,CAACC,KAAK,CAAC5D,GAAG,CAAC;QAClB+C,QAAQ,CAAC/C,GAAG,CAAC;MACf;IACF;EACF;EAEA,SAAS0D,SAASA,CAACT,IAAI,EAAEoB,GAAG,EAAE;IAC5B,IAAI5E,MAAM,GAAG,KAAK,CAAC;IACnB6E,IAAI,CAACC,YAAY,GAAG,UAAUC,CAAC,EAAE;MAAE,OAAO/E,MAAM,GAAG+E,CAAC;IAAE,CAAC;IACvD,IAAIC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAC3B,IAAIC,IAAI,CACN,CAAE,MAAM,GAAI3B,IAAI,CAAC4B,OAAO,CAAC,KAAK,EAAE,EAAE,CAAE,GAAG,yBAAyB,GAAGR,GAAG,GAAG,KAAK,CAAE,EAChF;MAACS,IAAI,EAAE;IAAwB,CACjC,CACF,CAAC;IACD,IAAI;MACFC,aAAa,CAACN,GAAG,CAAC;IACpB,CAAC,CAAC,OAAMzE,GAAG,EAAE;MACX2D,OAAO,CAACC,KAAK,CAAC5D,GAAG,CAAC;IACpB;IACA0E,GAAG,CAACM,eAAe,CAACP,GAAG,CAAC;IACxB,OAAOH,IAAI,CAACC,YAAY;IACxB,OAAO9E,MAAM;EACf;;EAEA;EACA6E,IAAI,CAACW,gBAAgB,CAAC,SAAS,EAAE,UAAUrE,CAAC,EAAE;IAC5C,IAAIkC,GAAG,GAAGlC,CAAC,CAACsE,IAAI;IAChB,IAAIC,SAAS,GAAGrC,GAAG,CAACqC,SAAS;IAC7B,IAAIC,MAAM,GAAGtC,GAAG,CAACsC,MAAM;IACvB,IAAIF,IAAI,GAAGpC,GAAG,CAACoC,IAAI;IACnB,IAAI;MACF;MACA,IAAIE,MAAM,KAAK,gBAAgB,EAAE;QAC/BvC,cAAc,CAACqC,IAAI,EAAE,UAAUzF,MAAM,EAAE;UACrC,IAAIA,MAAM,YAAYgE,KAAK,EAAE;YAC3B4B,WAAW,CAAC;cACVF,SAAS,EAAEA,SAAS;cACpBG,OAAO,EAAE,KAAK;cACd1B,KAAK,EAAEnE,MAAM,CAAC8F;YAChB,CAAC,CAAC;UACJ,CAAC,MAAM;YACLF,WAAW,CAAC;cACVF,SAAS,EAAEA,SAAS;cACpBG,OAAO,EAAE,IAAI;cACb7F,MAAM,EAAE;gBAAC+F,UAAU,EAAE,OAAO/F,MAAM,KAAK;cAAU;YACnD,CAAC,CAAC;UACJ;QACF,CAAC,CAAC;MACJ;MACA;MACA,IAAI2F,MAAM,KAAK,YAAY,EAAE;QAC3BtB,UAAU,CAACoB,IAAI,EAAE,UAAUzF,MAAM,EAAEgG,aAAa,EAAE;UAChD,IAAIhG,MAAM,YAAYgE,KAAK,EAAE;YAC3B4B,WAAW,CAAC;cACVF,SAAS,EAAEA,SAAS;cACpBG,OAAO,EAAE,KAAK;cACd1B,KAAK,EAAEnE,MAAM,CAAC8F;YAChB,CAAC,CAAC;UACJ,CAAC,MAAM;YACLF,WAAW,CAAC;cACVF,SAAS,EAAEA,SAAS;cACpBG,OAAO,EAAE,IAAI;cACb7F,MAAM,EAAEA;YACV,CAAC,EAAEgG,aAAa,IAAIrB,SAAS,CAAC;UAChC;QACF,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAMpE,GAAG,EAAE;MACXqF,WAAW,CAAC;QACVF,SAAS,EAAEA,SAAS;QACpBG,OAAO,EAAE,KAAK;QACd1B,KAAK,EAAE5D,GAAG,CAAC0F;MACb,CAAC,CAAC;IACJ;EACF,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASC,sBAAsBA,CAACC,OAAO,EAAE;EACvC,IAAIC,UAAU,GAAG,SAAAA,CAAA,EAAW;IAC1B,IAAIzE,IAAI,GAAG,EAAE;MAAEC,GAAG,GAAGC,SAAS,CAACC,MAAM;IACrC,OAAQF,GAAG,EAAE,EAAGD,IAAI,CAAEC,GAAG,CAAE,GAAGC,SAAS,CAAED,GAAG,CAAE;IAE9C,OAAOwE,UAAU,CAACC,cAAc,CAAC,CAAC,CAAC5G,IAAI,CAAC,UAAU6G,UAAU,EAAE;MAC5D,IAAI,OAAOA,UAAU,KAAK,UAAU,EAAE;QACpC,OAAOA,UAAU,CAACvE,KAAK,CAAC,KAAK,CAAC,EAAEJ,IAAI,CAAC;MACvC,CAAC,MAAM;QACL,MAAM,IAAIqC,KAAK,CAAC,iFAAiF,CAAC;MACpG;IACF,CAAC,CAAC;EACJ,CAAC;EACDoC,UAAU,CAACC,cAAc,GAAG,YAAW;IACrC;IACA,IAAI5C,YAAY,GAAG0C,OAAO,CAAC1C,YAAY;IACvC,IAAIC,IAAI,GAAGyC,OAAO,CAACzC,IAAI;;IAEvB;IACAD,YAAY,GAAGgB,KAAK,CAACC,OAAO,CAACjB,YAAY,CAAC,GAAGA,YAAY,CAACG,GAAG,CAAC,UAAUC,GAAG,EAAE;MAAE,OAAOA,GAAG,IAAIA,GAAG,CAACwC,cAAc,GAAGxC,GAAG,CAACwC,cAAc,CAAC,CAAC,GAAGxC,GAAG;IAAE,CAC9I,CAAC,GAAG,EAAE;;IAEN;IACA,IAAI0C,YAAY,GAAG3D,eAAe,CAACL,GAAG,CAACkB,YAAY,CAAC,CAAChE,IAAI,CAAC,UAAU+G,IAAI,EAAE;MACxE,OAAO9C,IAAI,CAAC3B,KAAK,CAAC,IAAI,EAAEyE,IAAI,CAAC;IAC/B,CAAC,CAAC;;IAEF;IACAJ,UAAU,CAACC,cAAc,GAAG,YAAY;MAAE,OAAOE,YAAY;IAAE,CAAC;IAEhE,OAAOA,YAAY;EACrB,CAAC;EACD,OAAOH,UAAU;AACnB;AAEA,IAAIK,eAAe,GAAG,SAAAA,CAAA,EAAY;EAChC,IAAIC,SAAS,GAAG,KAAK;;EAErB;EACA;EACA,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;IAC3E,IAAI;MACF;MACA;MACA,IAAIC,MAAM,GAAG,IAAIC,MAAM,CACrB7B,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE;QAAEE,IAAI,EAAE;MAAyB,CAAC,CAAC,CACxE,CAAC;MACDwB,MAAM,CAACE,SAAS,CAAC,CAAC;MAClBL,SAAS,GAAG,IAAI;IAClB,CAAC,CAAC,OAAOnG,GAAG,EAAE;MACZ,IAAI,OAAOyG,OAAO,KAAK,WAAW,IAAIA,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,MAAM,EAAE,CAAC,KAAM;QAC5EhD,OAAO,CAACiD,GAAG,CACR,qGAAqG,GAAI5G,GAAG,CAACuF,OAAQ,GAAG,GAC3H,CAAC;MACH;IACF;EACF;;EAEA;EACAW,eAAe,GAAG,SAAAA,CAAA,EAAY;IAAE,OAAOC,SAAS;EAAE,CAAC;EACnD,OAAOA,SAAS;AAClB,CAAC;AAED,IAAIU,eAAe,GAAG,CAAC;AACvB,IAAIC,UAAU,GAAG,CAAC;AAClB,IAAIC,kBAAkB,GAAG,KAAK;AAC9B,IAAIC,OAAO,GAAGrE,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;AACjC,IAAIqE,YAAY,GAAG,aAAc,YAAY;EAC3C,IAAIC,GAAG,GAAGvE,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EAC7BsE,GAAG,CAACC,MAAM,GAAG,CAAC;EACd,OAAOD,GAAG;AACZ,CAAC,CAAE,CAAC;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,kBAAkBA,CAACxB,OAAO,EAAE;EACnC,IAAI,CAAC,CAACA,OAAO,IAAI,OAAOA,OAAO,CAACzC,IAAI,KAAK,UAAU,KAAK,CAAC4D,kBAAkB,EAAE;IAC3E,MAAM,IAAItD,KAAK,CAAC,kCAAkC,CAAC;EACrD;EACA,IAAIP,YAAY,GAAG0C,OAAO,CAAC1C,YAAY;EACvC,IAAIC,IAAI,GAAGyC,OAAO,CAACzC,IAAI;EACvB,IAAIC,gBAAgB,GAAGwC,OAAO,CAACxC,gBAAgB;EAC/C,IAAIiE,QAAQ,GAAGzB,OAAO,CAACyB,QAAQ;EAE/B,IAAI,CAACnB,eAAe,CAAC,CAAC,EAAE;IACtB,OAAOP,sBAAsB,CAACC,OAAO,CAAC;EACxC;EAEA,IAAIyB,QAAQ,IAAI,IAAI,EAAE;IACpBA,QAAQ,GAAG,UAAU;EACvB;EACA,IAAIrE,EAAE,GAAG,cAAc,GAAI,EAAE6D,eAAgB;EAC7C,IAAI5D,IAAI,GAAG2C,OAAO,CAAC3C,IAAI,IAAID,EAAE;EAC7B,IAAIsE,oBAAoB,GAAG,IAAI;EAE/BpE,YAAY,GAAGA,YAAY,IAAIA,YAAY,CAACG,GAAG,CAAC,UAAUC,GAAG,EAAE;IAC7D;IACA,IAAI,OAAOA,GAAG,KAAK,UAAU,IAAI,CAACA,GAAG,CAACiE,gBAAgB,EAAE;MACtDR,kBAAkB,GAAG,IAAI;MACzBzD,GAAG,GAAG8D,kBAAkB,CAAC;QACvBC,QAAQ,EAAEA,QAAQ;QAClBpE,IAAI,EAAG,GAAG,GAAGA,IAAI,GAAG,yBAAyB,GAAIK,GAAG,CAACL,IAAM;QAC3DE,IAAI,EAAG,uBAAuB,GAAIqE,iBAAiB,CAAClE,GAAG,CAAE,GAAG;MAC9D,CAAC,CAAC;MACFyD,kBAAkB,GAAG,KAAK;IAC5B;IACA;IACA,IAAIzD,GAAG,IAAIA,GAAG,CAACiE,gBAAgB,EAAE;MAC/BjE,GAAG,GAAGA,GAAG,CAACiE,gBAAgB;IAC5B;IACA,OAAOjE,GAAG;EACZ,CAAC,CAAC;EAEF,SAASuC,UAAUA,CAAA,EAAG;IACpB,IAAIzE,IAAI,GAAG,EAAE;MAAEC,GAAG,GAAGC,SAAS,CAACC,MAAM;IACrC,OAAQF,GAAG,EAAE,EAAGD,IAAI,CAAEC,GAAG,CAAE,GAAGC,SAAS,CAAED,GAAG,CAAE;;IAE9C;IACA,IAAI,CAACiG,oBAAoB,EAAE;MACzBA,oBAAoB,GAAGG,UAAU,CAACJ,QAAQ,EAAC,gBAAgB,EAAExB,UAAU,CAAC0B,gBAAgB,CAAC;IAC3F;;IAEA;IACA,OAAOD,oBAAoB,CAACpI,IAAI,CAAC,UAAU4D,GAAG,EAAE;MAC9C,IAAI0C,UAAU,GAAG1C,GAAG,CAAC0C,UAAU;MAE/B,IAAIA,UAAU,EAAE;QACd,OAAOiC,UAAU,CAACJ,QAAQ,EAAC,YAAY,EAAE;UAACrE,EAAE,EAAEA,EAAE;UAAE5B,IAAI,EAAEA;QAAI,CAAC,CAAC;MAChE,CAAC,MAAM;QACL,MAAM,IAAIqC,KAAK,CAAC,iFAAiF,CAAC;MACpG;IACF,CAAC,CAAC;EACJ;EACAoC,UAAU,CAAC0B,gBAAgB,GAAG;IAC5BhE,cAAc,EAAE,IAAI;IACpBP,EAAE,EAAEA,EAAE;IACNC,IAAI,EAAEA,IAAI;IACVC,YAAY,EAAEA,YAAY;IAC1BC,IAAI,EAAEqE,iBAAiB,CAACrE,IAAI,CAAC;IAC7BC,gBAAgB,EAAEA,gBAAgB,IAAIoE,iBAAiB,CAACpE,gBAAgB;EAC1E,CAAC;EACD,OAAOyC,UAAU;AACnB;;AAEA;AACA;AACA;AACA;AACA,SAAS2B,iBAAiBA,CAACtG,EAAE,EAAE;EAC7B,IAAImD,GAAG,GAAGnD,EAAE,CAACwG,QAAQ,CAAC,CAAC;EACvB;EACA,IAAI,CAAC,WAAW,CAACC,IAAI,CAACtD,GAAG,CAAC,IAAI,WAAW,CAACsD,IAAI,CAACtD,GAAG,CAAC,EAAE;IACnDA,GAAG,GAAG,WAAW,GAAGA,GAAG;EACzB;EACA,OAAOA,GAAG;AACZ;AAGA,SAASuD,SAASA,CAACP,QAAQ,EAAE;EAC3B,IAAIf,MAAM,GAAGU,OAAO,CAACK,QAAQ,CAAC;EAC9B,IAAI,CAACf,MAAM,EAAE;IACX;IACA,IAAIuB,SAAS,GAAGL,iBAAiB,CAAC/E,eAAe,CAAC;;IAElD;IACA6D,MAAM,GAAGU,OAAO,CAACK,QAAQ,CAAC,GAAG,IAAId,MAAM,CACrC7B,GAAG,CAACC,eAAe,CACjB,IAAIC,IAAI,CACN,CAAE,+BAA+B,GAAIyC,QAAQ,CAACxC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAE,GAAG,YAAY,GAAGgD,SAAS,GAAG,KAAK,CAAE,EACtG;MAAC/C,IAAI,EAAE;IAAwB,CACjC,CACF,CACF,CAAC;;IAED;IACAwB,MAAM,CAACwB,SAAS,GAAG,UAAUlH,CAAC,EAAE;MAC9B,IAAImH,QAAQ,GAAGnH,CAAC,CAACsE,IAAI;MACrB,IAAI8C,KAAK,GAAGD,QAAQ,CAAC5C,SAAS;MAC9B,IAAIpC,QAAQ,GAAGkE,YAAY,CAACe,KAAK,CAAC;MAClC,IAAI,CAACjF,QAAQ,EAAE;QACb,MAAM,IAAIU,KAAK,CAAC,uDAAuD,CAAC;MAC1E;MACA,OAAOwD,YAAY,CAACe,KAAK,CAAC;MAC1Bf,YAAY,CAACE,MAAM,EAAE;MACrBpE,QAAQ,CAACgF,QAAQ,CAAC;IACpB,CAAC;EACH;EACA,OAAOzB,MAAM;AACf;;AAEA;AACA,SAASmB,UAAUA,CAACJ,QAAQ,EAAEjC,MAAM,EAAEF,IAAI,EAAE;EAC1C,IAAI+C,QAAQ,GAAG5F,eAAe,CAAC,CAAC;EAChC,IAAI8C,SAAS,GAAG,EAAE2B,UAAU;EAC5BG,YAAY,CAAC9B,SAAS,CAAC,GAAG,UAAU4C,QAAQ,EAAE;IAC5C,IAAIA,QAAQ,CAACzC,OAAO,EAAE;MACpB2C,QAAQ,CAACnI,OAAO,CAACiI,QAAQ,CAACtI,MAAM,CAAC;IACnC,CAAC,MAAM;MACLwI,QAAQ,CAAClI,MAAM,CAAC,IAAI0D,KAAK,CAAE,kBAAkB,GAAG2B,MAAM,GAAG,SAAS,GAAI2C,QAAQ,CAACnE,KAAO,CAAC,CAAC;IAC1F;EACF,CAAC;EACDqD,YAAY,CAACE,MAAM,EAAE;EACrB,IAAIF,YAAY,CAACE,MAAM,GAAG,IAAI,EAAE;IAAE;IAChCxD,OAAO,CAACuE,IAAI,CAAC,uEAAuE,CAAC;EACvF;EACAN,SAAS,CAACP,QAAQ,CAAC,CAAChC,WAAW,CAAC;IAC9BF,SAAS,EAAEA,SAAS;IACpBC,MAAM,EAAEA,MAAM;IACdF,IAAI,EAAEA;EACR,CAAC,CAAC;EACF,OAAO+C,QAAQ;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAIE,oBAAoB,GAAG,aAAaf,kBAAkB,CAAC;EACzDnE,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE,CAACb,eAAe,CAAC;EAC/Bc,IAAI,EAAE,SAAAA,CAASiF,QAAQ,EAAE;IACvB,OAAOA,QAAQ;EACjB;AACF,CAAC,CAAC;AAEF,SAAS/F,eAAe,IAAI+F,QAAQ,EAAED,oBAAoB,EAAEf,kBAAkB,EAAEI,iBAAiB"},"metadata":{},"sourceType":"module"}