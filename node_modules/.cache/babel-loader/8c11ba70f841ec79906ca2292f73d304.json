{"ast":null,"code":"import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { useRef, useMemo, createElement } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Billboard } from './Billboard.js';\nimport { useTexture } from './useTexture.js';\nimport CloudImage from '../assets/cloud.base64.js';\nfunction Cloud(_ref) {\n  let {\n      opacity = 0.5,\n      speed = 0.4,\n      width = 10,\n      length = 1.5,\n      segments = 20,\n      dir = 1\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, [\"opacity\", \"speed\", \"width\", \"length\", \"segments\", \"dir\"]);\n  const group = useRef();\n  const texture = useTexture(CloudImage);\n  const clouds = useMemo(() => [...new Array(segments)].map((_, index) => ({\n    x: width / 2 - Math.random() * width,\n    y: width / 2 - Math.random() * width,\n    scale: 0.4 + Math.sin((index + 1) / segments * Math.PI) * ((0.2 + Math.random()) * 10),\n    density: Math.max(0.2, Math.random()),\n    rotation: Math.max(0.002, 0.005 * Math.random()) * speed\n  })), [width, segments, speed]);\n  useFrame(state => {\n    var _group$current;\n    return (_group$current = group.current) == null ? void 0 : _group$current.children.forEach((cloud, index) => {\n      cloud.rotation.z += clouds[index].rotation * dir;\n      cloud.scale.setScalar(clouds[index].scale + (1 + Math.sin(state.clock.getElapsedTime() / 10)) / 2 * index / 10);\n    });\n  });\n  return /*#__PURE__*/createElement(\"group\", props, /*#__PURE__*/createElement(\"group\", {\n    position: [0, 0, segments / 2 * length],\n    ref: group\n  }, clouds.map((_ref2, index) => {\n    let {\n      x,\n      y,\n      scale,\n      density\n    } = _ref2;\n    return /*#__PURE__*/createElement(Billboard, {\n      key: index,\n      scale: [scale, scale, scale],\n      position: [x, y, -index * length],\n      lockZ: true\n    }, /*#__PURE__*/createElement(\"meshStandardMaterial\", {\n      map: texture,\n      transparent: true,\n      opacity: scale / 6 * density * opacity,\n      depthTest: false\n    }));\n  })));\n}\nexport { Cloud };","map":{"version":3,"names":["_objectWithoutPropertiesLoose","useRef","useMemo","createElement","useFrame","Billboard","useTexture","CloudImage","Cloud","_ref","opacity","speed","width","length","segments","dir","props","group","texture","clouds","Array","map","_","index","x","Math","random","y","scale","sin","PI","density","max","rotation","state","_group$current","current","children","forEach","cloud","z","setScalar","clock","getElapsedTime","position","ref","_ref2","key","lockZ","transparent","depthTest"],"sources":["/Users/mitchellkimbell/Desktop/space-frontend/node_modules/@react-three/drei/core/Cloud.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { useRef, useMemo, createElement } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Billboard } from './Billboard.js';\nimport { useTexture } from './useTexture.js';\nimport CloudImage from '../assets/cloud.base64.js';\n\nfunction Cloud(_ref) {\n  let {\n    opacity = 0.5,\n    speed = 0.4,\n    width = 10,\n    length = 1.5,\n    segments = 20,\n    dir = 1\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"opacity\", \"speed\", \"width\", \"length\", \"segments\", \"dir\"]);\n\n  const group = useRef();\n  const texture = useTexture(CloudImage);\n  const clouds = useMemo(() => [...new Array(segments)].map((_, index) => ({\n    x: width / 2 - Math.random() * width,\n    y: width / 2 - Math.random() * width,\n    scale: 0.4 + Math.sin((index + 1) / segments * Math.PI) * ((0.2 + Math.random()) * 10),\n    density: Math.max(0.2, Math.random()),\n    rotation: Math.max(0.002, 0.005 * Math.random()) * speed\n  })), [width, segments, speed]);\n  useFrame(state => {\n    var _group$current;\n\n    return (_group$current = group.current) == null ? void 0 : _group$current.children.forEach((cloud, index) => {\n      cloud.rotation.z += clouds[index].rotation * dir;\n      cloud.scale.setScalar(clouds[index].scale + (1 + Math.sin(state.clock.getElapsedTime() / 10)) / 2 * index / 10);\n    });\n  });\n  return /*#__PURE__*/createElement(\"group\", props, /*#__PURE__*/createElement(\"group\", {\n    position: [0, 0, segments / 2 * length],\n    ref: group\n  }, clouds.map(({\n    x,\n    y,\n    scale,\n    density\n  }, index) => /*#__PURE__*/createElement(Billboard, {\n    key: index,\n    scale: [scale, scale, scale],\n    position: [x, y, -index * length],\n    lockZ: true\n  }, /*#__PURE__*/createElement(\"meshStandardMaterial\", {\n    map: texture,\n    transparent: true,\n    opacity: scale / 6 * density * opacity,\n    depthTest: false\n  })))));\n}\n\nexport { Cloud };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}