{"ast":null,"code":"import tx1 from \"./textures/1.jpg\";\nimport tx2 from \"./textures/2.jpg\";\nimport tx3 from \"./textures/3.jpg\";\nimport tx4 from \"./textures/4.jpg\";\nimport tx5 from \"./textures/5.jpg\";\nimport tx6 from \"./textures/6.jpg\";\nconst random = (a, b) => a + Math.random() * b;\nconst randomInt = (a, b) => Math.floor(random(a, b));\nconst randomColor = () => \"rgb(\".concat(randomInt(80, 50), \", \").concat(randomInt(80, 50), \", \").concat(randomInt(80, 50), \")\");\nconst shuffle = a => {\n  const temp = a.slice(0);\n  for (let i = temp.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [temp[i], temp[j]] = [temp[j], temp[i]];\n  }\n  return temp;\n};\nconst textures = shuffle([tx1, tx2, tx3, tx4, tx5, tx6]);\nconst planetData = [];\nconst totalPlanets = 0;\nfor (let index = 0; index < totalPlanets; index++) {\n  planetData.push({\n    id: index,\n    color: randomColor(),\n    xRadius: (index + 1.5) * 4,\n    zRadius: (index + 1.5) * 2,\n    size: random(0.5, 1),\n    speed: random(0.1, 0.6),\n    offset: random(0, Math.PI * 2),\n    rotationSpeed: random(0.01, 0.03),\n    textureMap: textures[index]\n  });\n}\nexport default planetData;","map":{"version":3,"names":["tx1","tx2","tx3","tx4","tx5","tx6","random","a","b","Math","randomInt","floor","randomColor","concat","shuffle","temp","slice","i","length","j","textures","planetData","totalPlanets","index","push","id","color","xRadius","zRadius","size","speed","offset","PI","rotationSpeed","textureMap"],"sources":["/Users/mitchellkimbell/Desktop/frontend-in-space/src/planetData.js"],"sourcesContent":["import tx1 from \"./textures/1.jpg\";\nimport tx2 from \"./textures/2.jpg\";\nimport tx3 from \"./textures/3.jpg\";\nimport tx4 from \"./textures/4.jpg\";\nimport tx5 from \"./textures/5.jpg\";\nimport tx6 from \"./textures/6.jpg\";\n\nconst random = (a, b) => a + Math.random() * b;\nconst randomInt = (a, b) => Math.floor(random(a, b));\nconst randomColor = () =>\n  `rgb(${randomInt(80, 50)}, ${randomInt(80, 50)}, ${randomInt(80, 50)})`;\nconst shuffle = (a) => {\n  const temp = a.slice(0);\n  for (let i = temp.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [temp[i], temp[j]] = [temp[j], temp[i]];\n  }\n  return temp;\n};\n\nconst textures = shuffle([tx1, tx2, tx3, tx4, tx5, tx6]);\n\nconst planetData = [];\nconst totalPlanets = 0;\nfor (let index = 0; index < totalPlanets; index++) {\n  planetData.push({\n    id: index,\n    color: randomColor(),\n    xRadius: (index + 1.5) * 4,\n    zRadius: (index + 1.5) * 2,\n    size: random(0.5, 1),\n\n    speed: random(0.1, 0.6),\n    offset: random(0, Math.PI * 2),\n    rotationSpeed: random(0.01, 0.03),\n    textureMap: textures[index]\n\n  });\n}\n\nexport default planetData;\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,kBAAkB;AAClC,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,GAAG,MAAM,kBAAkB;AAElC,MAAMC,MAAM,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGE,IAAI,CAACH,MAAM,CAAC,CAAC,GAAGE,CAAC;AAC9C,MAAME,SAAS,GAAGA,CAACH,CAAC,EAAEC,CAAC,KAAKC,IAAI,CAACE,KAAK,CAACL,MAAM,CAACC,CAAC,EAAEC,CAAC,CAAC,CAAC;AACpD,MAAMI,WAAW,GAAGA,CAAA,YAAAC,MAAA,CACXH,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,QAAAG,MAAA,CAAKH,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,QAAAG,MAAA,CAAKH,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,MAAG;AACzE,MAAMI,OAAO,GAAIP,CAAC,IAAK;EACrB,MAAMQ,IAAI,GAAGR,CAAC,CAACS,KAAK,CAAC,CAAC,CAAC;EACvB,KAAK,IAAIC,CAAC,GAAGF,IAAI,CAACG,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxC,MAAME,CAAC,GAAGV,IAAI,CAACE,KAAK,CAACF,IAAI,CAACH,MAAM,CAAC,CAAC,IAAIW,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7C,CAACF,IAAI,CAACE,CAAC,CAAC,EAAEF,IAAI,CAACI,CAAC,CAAC,CAAC,GAAG,CAACJ,IAAI,CAACI,CAAC,CAAC,EAAEJ,IAAI,CAACE,CAAC,CAAC,CAAC;EACzC;EACA,OAAOF,IAAI;AACb,CAAC;AAED,MAAMK,QAAQ,GAAGN,OAAO,CAAC,CAACd,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,CAAC,CAAC;AAExD,MAAMgB,UAAU,GAAG,EAAE;AACrB,MAAMC,YAAY,GAAG,CAAC;AACtB,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGD,YAAY,EAAEC,KAAK,EAAE,EAAE;EACjDF,UAAU,CAACG,IAAI,CAAC;IACdC,EAAE,EAAEF,KAAK;IACTG,KAAK,EAAEd,WAAW,CAAC,CAAC;IACpBe,OAAO,EAAE,CAACJ,KAAK,GAAG,GAAG,IAAI,CAAC;IAC1BK,OAAO,EAAE,CAACL,KAAK,GAAG,GAAG,IAAI,CAAC;IAC1BM,IAAI,EAAEvB,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;IAEpBwB,KAAK,EAAExB,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC;IACvByB,MAAM,EAAEzB,MAAM,CAAC,CAAC,EAAEG,IAAI,CAACuB,EAAE,GAAG,CAAC,CAAC;IAC9BC,aAAa,EAAE3B,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;IACjC4B,UAAU,EAAEd,QAAQ,CAACG,KAAK;EAE5B,CAAC,CAAC;AACJ;AAEA,eAAeF,UAAU"},"metadata":{},"sourceType":"module"}