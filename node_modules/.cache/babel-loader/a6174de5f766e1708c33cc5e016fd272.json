{"ast":null,"code":"import { useRef, useEffect } from 'react';\nimport { BufferGeometry } from 'three';\nimport { EdgeSplitModifier } from 'three-stdlib';\nfunction useEdgeSplit(cutOffAngle) {\n  let tryKeepNormals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  const ref = useRef();\n  const original = useRef();\n  const modifier = useRef();\n  useEffect(() => {\n    if (!original.current && ref.current) {\n      original.current = ref.current.geometry.clone();\n      modifier.current = new EdgeSplitModifier();\n    }\n  }, []);\n  useEffect(() => {\n    if (original.current && ref.current && modifier.current) {\n      let geometry = new BufferGeometry();\n      geometry = original.current.clone();\n      const modifiedGeometry = modifier.current.modify(geometry, cutOffAngle, tryKeepNormals);\n      modifiedGeometry.computeVertexNormals();\n      ref.current.geometry = modifiedGeometry;\n    }\n  }, [cutOffAngle, tryKeepNormals]);\n  return ref;\n}\nexport { useEdgeSplit };","map":{"version":3,"names":["useRef","useEffect","BufferGeometry","EdgeSplitModifier","useEdgeSplit","cutOffAngle","tryKeepNormals","arguments","length","undefined","ref","original","modifier","current","geometry","clone","modifiedGeometry","modify","computeVertexNormals"],"sources":["/Users/mitchellkimbell/Desktop/space-frontend/node_modules/@react-three/drei/core/useEdgeSplit.js"],"sourcesContent":["import { useRef, useEffect } from 'react';\nimport { BufferGeometry } from 'three';\nimport { EdgeSplitModifier } from 'three-stdlib';\n\nfunction useEdgeSplit(cutOffAngle, tryKeepNormals = true) {\n  const ref = useRef();\n  const original = useRef();\n  const modifier = useRef();\n  useEffect(() => {\n    if (!original.current && ref.current) {\n      original.current = ref.current.geometry.clone();\n      modifier.current = new EdgeSplitModifier();\n    }\n  }, []);\n  useEffect(() => {\n    if (original.current && ref.current && modifier.current) {\n      let geometry = new BufferGeometry();\n      geometry = original.current.clone();\n      const modifiedGeometry = modifier.current.modify(geometry, cutOffAngle, tryKeepNormals);\n      modifiedGeometry.computeVertexNormals();\n      ref.current.geometry = modifiedGeometry;\n    }\n  }, [cutOffAngle, tryKeepNormals]);\n  return ref;\n}\n\nexport { useEdgeSplit };\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,SAAS,QAAQ,OAAO;AACzC,SAASC,cAAc,QAAQ,OAAO;AACtC,SAASC,iBAAiB,QAAQ,cAAc;AAEhD,SAASC,YAAYA,CAACC,WAAW,EAAyB;EAAA,IAAvBC,cAAc,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;EACtD,MAAMG,GAAG,GAAGV,MAAM,CAAC,CAAC;EACpB,MAAMW,QAAQ,GAAGX,MAAM,CAAC,CAAC;EACzB,MAAMY,QAAQ,GAAGZ,MAAM,CAAC,CAAC;EACzBC,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,QAAQ,CAACE,OAAO,IAAIH,GAAG,CAACG,OAAO,EAAE;MACpCF,QAAQ,CAACE,OAAO,GAAGH,GAAG,CAACG,OAAO,CAACC,QAAQ,CAACC,KAAK,CAAC,CAAC;MAC/CH,QAAQ,CAACC,OAAO,GAAG,IAAIV,iBAAiB,CAAC,CAAC;IAC5C;EACF,CAAC,EAAE,EAAE,CAAC;EACNF,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,CAACE,OAAO,IAAIH,GAAG,CAACG,OAAO,IAAID,QAAQ,CAACC,OAAO,EAAE;MACvD,IAAIC,QAAQ,GAAG,IAAIZ,cAAc,CAAC,CAAC;MACnCY,QAAQ,GAAGH,QAAQ,CAACE,OAAO,CAACE,KAAK,CAAC,CAAC;MACnC,MAAMC,gBAAgB,GAAGJ,QAAQ,CAACC,OAAO,CAACI,MAAM,CAACH,QAAQ,EAAET,WAAW,EAAEC,cAAc,CAAC;MACvFU,gBAAgB,CAACE,oBAAoB,CAAC,CAAC;MACvCR,GAAG,CAACG,OAAO,CAACC,QAAQ,GAAGE,gBAAgB;IACzC;EACF,CAAC,EAAE,CAACX,WAAW,EAAEC,cAAc,CAAC,CAAC;EACjC,OAAOI,GAAG;AACZ;AAEA,SAASN,YAAY"},"metadata":{},"sourceType":"module"}