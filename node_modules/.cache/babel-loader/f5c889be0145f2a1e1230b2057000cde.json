{"ast":null,"code":"import { useState } from 'react';\nimport { Raycaster, Camera } from 'three';\nimport { useThree, applyProps } from '@react-three/fiber';\nfunction useCamera(camera, props) {\n  const mouse = useThree(state => state.mouse);\n  const [raycast] = useState(() => {\n    let raycaster = new Raycaster();\n    /**\n     * applyProps is an internal method of r3f and\n     * therefore requires its first arg to be an\n     * \"Instance\" a term used with the Reconciler\n     * so we have an expect error to mask this\n     */\n    // @ts-expect-error\n\n    if (props) applyProps(raycaster, props, {});\n    return function (_, intersects) {\n      raycaster.setFromCamera(mouse, camera instanceof Camera ? camera : camera.current);\n      const rc = this.constructor.prototype.raycast.bind(this);\n      if (rc) rc(raycaster, intersects);\n    };\n  });\n  return raycast;\n}\nexport { useCamera };","map":{"version":3,"names":["useState","Raycaster","Camera","useThree","applyProps","useCamera","camera","props","mouse","state","raycast","raycaster","_","intersects","setFromCamera","current","rc","constructor","prototype","bind"],"sources":["/Users/mitchellkimbell/Desktop/space-frontend/node_modules/@react-three/drei/core/useCamera.js"],"sourcesContent":["import { useState } from 'react';\nimport { Raycaster, Camera } from 'three';\nimport { useThree, applyProps } from '@react-three/fiber';\n\nfunction useCamera(camera, props) {\n  const mouse = useThree(state => state.mouse);\n  const [raycast] = useState(() => {\n    let raycaster = new Raycaster();\n    /**\n     * applyProps is an internal method of r3f and\n     * therefore requires its first arg to be an\n     * \"Instance\" a term used with the Reconciler\n     * so we have an expect error to mask this\n     */\n    // @ts-expect-error\n\n    if (props) applyProps(raycaster, props, {});\n    return function (_, intersects) {\n      raycaster.setFromCamera(mouse, camera instanceof Camera ? camera : camera.current);\n      const rc = this.constructor.prototype.raycast.bind(this);\n      if (rc) rc(raycaster, intersects);\n    };\n  });\n  return raycast;\n}\n\nexport { useCamera };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,UAAU,QAAQ,oBAAoB;AAEzD,SAASC,SAASA,CAACC,MAAM,EAAEC,KAAK,EAAE;EAChC,MAAMC,KAAK,GAAGL,QAAQ,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAK,CAAC;EAC5C,MAAM,CAACE,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM;IAC/B,IAAIW,SAAS,GAAG,IAAIV,SAAS,CAAC,CAAC;IAC/B;AACJ;AACA;AACA;AACA;AACA;IACI;;IAEA,IAAIM,KAAK,EAAEH,UAAU,CAACO,SAAS,EAAEJ,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3C,OAAO,UAAUK,CAAC,EAAEC,UAAU,EAAE;MAC9BF,SAAS,CAACG,aAAa,CAACN,KAAK,EAAEF,MAAM,YAAYJ,MAAM,GAAGI,MAAM,GAAGA,MAAM,CAACS,OAAO,CAAC;MAClF,MAAMC,EAAE,GAAG,IAAI,CAACC,WAAW,CAACC,SAAS,CAACR,OAAO,CAACS,IAAI,CAAC,IAAI,CAAC;MACxD,IAAIH,EAAE,EAAEA,EAAE,CAACL,SAAS,EAAEE,UAAU,CAAC;IACnC,CAAC;EACH,CAAC,CAAC;EACF,OAAOH,OAAO;AAChB;AAEA,SAASL,SAAS"},"metadata":{},"sourceType":"module"}