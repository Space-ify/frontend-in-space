{"ast":null,"code":"var _jsxFileName = \"/Users/mitchellkimbell/Desktop/frontend-in-space/src/components/SearchPlaylist/SearchPlaylist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // Make sure to install axios with `npm install axios`\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchComponent = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n  const handleSearch = async e => {\n    e.preventDefault(); // Prevent the form from refreshing the page\n    if (!query) return; // If the query is empty, don't make the API call\n\n    try {\n      const response = await axios.get(\"https://api.example.com/search?q=\".concat(query));\n      setResults(response.data); // Assuming the API returns an array of results\n    } catch (error) {\n      console.error(\"Error fetching data: \", error);\n      // Handle error, perhaps set an error state to display to the user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"Search...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: results.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.title, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchComponent, \"Grp0ouI1isRc8g0LMx1FfgxNSWM=\");\n_c = SearchComponent;\nexport default SearchComponent;\nvar _c;\n$RefreshReg$(_c, \"SearchComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SearchComponent","_s","query","setQuery","results","setResults","handleSearch","e","preventDefault","response","get","concat","data","error","console","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","index","title","_c","$RefreshReg$"],"sources":["/Users/mitchellkimbell/Desktop/frontend-in-space/src/components/SearchPlaylist/SearchPlaylist.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\"; // Make sure to install axios with `npm install axios`\n\nconst SearchComponent = () => {\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  const handleSearch = async (e) => {\n    e.preventDefault(); // Prevent the form from refreshing the page\n    if (!query) return; // If the query is empty, don't make the API call\n\n    try {\n      const response = await axios.get(\n        `https://api.example.com/search?q=${query}`\n      );\n      setResults(response.data); // Assuming the API returns an array of results\n    } catch (error) {\n      console.error(\"Error fetching data: \", error);\n      // Handle error, perhaps set an error state to display to the user\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSearch}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"Search...\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {results.length > 0 && (\n        <ul>\n          {results.map((item, index) => (\n            <li key={index}>\n              {item.title}{\" \"}\n              {/* Replace `item.title` with the relevant property from your API results */}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default SearchComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,IAAI,CAACN,KAAK,EAAE,OAAO,CAAC;;IAEpB,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,qCAAAC,MAAA,CACMT,KAAK,CAC3C,CAAC;MACDG,UAAU,CAACI,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C;IACF;EACF,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAMiB,QAAQ,EAAEV,YAAa;MAAAS,QAAA,gBAC3BhB,OAAA;QACEkB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEhB,KAAM;QACbiB,QAAQ,EAAGZ,CAAC,IAAKJ,QAAQ,CAACI,CAAC,CAACa,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF1B,OAAA;QAAQkB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EACNrB,OAAO,CAACsB,MAAM,GAAG,CAAC,iBACjB3B,OAAA;MAAAgB,QAAA,EACGX,OAAO,CAACuB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvB9B,OAAA;QAAAgB,QAAA,GACGa,IAAI,CAACE,KAAK,EAAE,GAAG;MAAA,GADTD,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA1CID,eAAe;AAAA+B,EAAA,GAAf/B,eAAe;AA4CrB,eAAeA,eAAe;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}