{"ast":null,"code":"var _jsxFileName = \"/Users/mitchellkimbell/Desktop/space-frontend/src/App.js\";\nimport React from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport planetData from \"./planetData\";\nimport \"./styles.css\";\nimport Frame from \"./components/Frame/Frame\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Frame, {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://medium.com/geekculture/build-3d-apps-with-react-animated-solar-system-part-1-c4c394a8574c\",\n        className: \"article-link\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Step by step guide to how I build this\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Canvas, {\n        camera: {\n          position: [0, 20, 25],\n          fov: 45\n        },\n        children: [/*#__PURE__*/_jsxDEV(Sun, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 7\n        }, this), planetData.map(planet => /*#__PURE__*/_jsxDEV(Planet, {\n          planet: planet\n        }, planet.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this)), /*#__PURE__*/_jsxDEV(Lights, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nfunction Sun() {\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n      args: [2.5, 32, 32]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      color: \"#E1DC59\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Sun;\nfunction Planet(_ref) {\n  let {\n    planet: {\n      color,\n      xRadius,\n      zRadius,\n      size\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [xRadius, 0, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [size, 32, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Ecliptic, {\n      xRadius: xRadius,\n      zRadius: zRadius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c3 = Planet;\nfunction Lights() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [0, 0, 0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c4 = Lights;\nfunction Ecliptic(_ref2) {\n  let {\n    xRadius = 1,\n    zRadius = 1\n  } = _ref2;\n  const points = [];\n  for (let index = 0; index < 64; index++) {\n    const angle = index / 64 * 2 * Math.PI;\n    const x = xRadius * Math.cos(angle);\n    const z = zRadius * Math.sin(angle);\n    points.push(new THREE.Vector3(x, 0, z));\n  }\n  points.push(points[0]);\n  const lineGeometry = new THREE.BufferGeometry().setFromPoints(points);\n  return /*#__PURE__*/_jsxDEV(\"line\", {\n    geometry: lineGeometry,\n    children: /*#__PURE__*/_jsxDEV(\"lineBasicMaterial\", {\n      attach: \"material\",\n      color: \"#BFBBDA\",\n      linewidth: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_c5 = Ecliptic;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Sun\");\n$RefreshReg$(_c3, \"Planet\");\n$RefreshReg$(_c4, \"Lights\");\n$RefreshReg$(_c5, \"Ecliptic\");","map":{"version":3,"names":["React","Canvas","OrbitControls","THREE","planetData","Frame","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","href","className","target","rel","fileName","_jsxFileName","lineNumber","columnNumber","camera","position","fov","Sun","map","planet","Planet","id","Lights","_c","args","color","_c2","_ref","xRadius","zRadius","size","Ecliptic","_c3","_c4","_ref2","points","index","angle","Math","PI","x","cos","z","sin","push","Vector3","lineGeometry","BufferGeometry","setFromPoints","geometry","attach","linewidth","_c5","$RefreshReg$"],"sources":["/Users/mitchellkimbell/Desktop/space-frontend/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { OrbitControls } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport planetData from \"./planetData\";\nimport \"./styles.css\";\nimport Frame from \"./components/Frame/Frame\"\n\nexport default function App() {\n  return (\n    <>\n  <Frame>\n    <a\n      href=\"https://medium.com/geekculture/build-3d-apps-with-react-animated-solar-system-part-1-c4c394a8574c\"\n      className=\"article-link\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      Step by step guide to how I build this\n    </a>\n    <Canvas camera={{ position: [0, 20, 25], fov: 45 }}>\n      <Sun />\n      {planetData.map((planet) => (\n        <Planet planet={planet} key={planet.id} />\n      ))}\n      <Lights />\n      <OrbitControls />\n    </Canvas>\n  </Frame>\n</>\n  );\n}\nfunction Sun() {\n  return (\n    <mesh>\n      <sphereGeometry args={[2.5, 32, 32]} />\n      <meshStandardMaterial color=\"#E1DC59\" />\n    </mesh>\n  );\n}\nfunction Planet({ planet: { color, xRadius, zRadius, size } }) {\n  return (\n    <>\n      <mesh position={[xRadius, 0, 0]}>\n        <sphereGeometry args={[size, 32, 32]} />\n        <meshStandardMaterial color={color} />\n      </mesh>\n      <Ecliptic xRadius={xRadius} zRadius={zRadius} />\n    </>\n  );\n}\n\nfunction Lights() {\n  return (\n    <>\n      <ambientLight />\n      <pointLight position={[0, 0, 0]} />\n    </>\n  );\n}\n\nfunction Ecliptic({ xRadius = 1, zRadius = 1 }) {\n  const points = [];\n  for (let index = 0; index < 64; index++) {\n    const angle = (index / 64) * 2 * Math.PI;\n    const x = xRadius * Math.cos(angle);\n    const z = zRadius * Math.sin(angle);\n    points.push(new THREE.Vector3(x, 0, z));\n  }\n\n  points.push(points[0]);\n\n  const lineGeometry = new THREE.BufferGeometry().setFromPoints(points);\n  return (\n    <line geometry={lineGeometry}>\n      <lineBasicMaterial attach=\"material\" color=\"#BFBBDA\" linewidth={10} />\n    </line>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}